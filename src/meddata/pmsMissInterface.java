package meddata;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Sef
 */


import java.util.ArrayList;
import java.util.Calendar;
import javax.swing.JOptionPane;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.*;
import java.util.Date;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import javax.swing.Timer;
import javax.swing.ImageIcon;

public class pmsMissInterface extends javax.swing.JFrame {
    /**
     * Creates new form NewJFrame
     */
    
    int tempAddBackButton = 0;
    int tempBackButton = 0;
    int z = 0;
    int z2 = 0;
    int z3 = 0;
    String actionFirstName = "";
    String actionLastName = "";
    int timerVariable = 2000;
    int actionSwitch = 1;
    private JLabel clock;
    public Patient currentPatient;
    public Appointment currentAppointment;
    public Visit currentVisit;
    public MedData data = loadMedData.get();
    public ArrayList<Patient> currentPatientList = new ArrayList();
    public ArrayList<Appointment> currentAppointmentList = new ArrayList();
    public ArrayList<Visit> currentVisitList = new ArrayList();
    public ArrayList<String> doctors = data.getDoctors();
    public ArrayList<Calendar> availableTimes = new ArrayList();
    public ArrayList<Integer> unavailableTimes = new ArrayList();
    public boolean modifyAppointment = false;
    public String[] tempAppointment = new String[100];
    public String empty = "";
    public String[] patientNameArray = new String[100];
    public String[] deletedpatientNameArray = new String[100];
    
    public pmsMissInterface() {
        initComponents();
        setBackground(Color.black);
        taskCheckbox.setVisible(false);
        taskCheckbox1.setVisible(false);
        taskCheckbox2.setVisible(false);
        taskCheckbox3.setVisible(false);
        taskCheckbox4.setVisible(false);
        taskCheckbox5.setVisible(false);
        male.setSelected(true);
        for(int em = 0; em < 99; em++){
            patientNameArray[em] = "";
        }
        for(int em2 = 0; em2 < 99; em2++){
            deletedpatientNameArray[em2] = "zaqnhy";
        }
        for(int em3 = 0; em3 < 99; em3++){
            tempAppointment[em3] = "";
        }
        for (String d : doctors) {
            doctorList.add(d);
        }
        DayPane();
        ClockPane();
        DatePane();
        actionsPane();
        
    }
    
    
    
    private void updateTodaysAppointments() {
        inProgressList.removeAll();
        todaysAppointmentList.removeAll();
        for (Appointment a : data.getAppointmentsForDay(Calendar.getInstance())) {
            todaysAppointmentList.add(a.getPatientName() + " " + (a.getTime().get(Calendar.MONTH) + 1) + "/"
                    + a.getTime().get(Calendar.DAY_OF_MONTH) + "/" + a.getTime().get(Calendar.YEAR) + " "
                    + (a.getTime().get(Calendar.HOUR_OF_DAY) * 100 + a.getTime().get(Calendar.MINUTE)));
        }
        for (Visit v : data.getCheckedIn()) {
            inProgressList.add(v.getPatientName() + " ");
        }
 
    }
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dayPanel = new javax.swing.JPanel();
        dayLabel = new javax.swing.JLabel();
        clockPanel = new javax.swing.JPanel();
        extraRightPanel = new javax.swing.JPanel();
        timeChartPanel = new javax.swing.JPanel();
        jLabel41 = new javax.swing.JLabel();
        modifyPatientPanel = new javax.swing.JPanel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        firstName1 = new javax.swing.JTextField();
        lastName1 = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        address1 = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        telephoneNumber1 = new javax.swing.JTextField();
        jLabel32 = new javax.swing.JLabel();
        emergencyContact1 = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        eMailAddress1 = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        male1 = new javax.swing.JCheckBox();
        female1 = new javax.swing.JCheckBox();
        jLabel35 = new javax.swing.JLabel();
        socialSecurityNumber1 = new javax.swing.JTextField();
        modifyPatientPanel2Button = new javax.swing.JButton();
        modifyPatientCancel1 = new javax.swing.JButton();
        cancelPopUp5 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jLabel40 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        medicalBackground1 = new javax.swing.JTextArea();
        modifyPatientDone = new javax.swing.JButton();
        modifyPatientCancel = new javax.swing.JButton();
        modifyPatientBack = new javax.swing.JButton();
        cancelPopUp4 = new javax.swing.JLabel();
        verifyPopUp4 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        married1 = new javax.swing.JCheckBox();
        jLabel37 = new javax.swing.JLabel();
        insuranceCoPay1 = new javax.swing.JTextField();
        jLabel38 = new javax.swing.JLabel();
        insuranceName1 = new javax.swing.JTextField();
        jLabel39 = new javax.swing.JLabel();
        insurancePolicy1 = new javax.swing.JTextField();
        check_inPanel = new javax.swing.JPanel();
        jLabel59 = new javax.swing.JLabel();
        todaysAppointmentList = new java.awt.List();
        checkInButton = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        checkInButton1 = new javax.swing.JButton();
        cancelPopUp3 = new javax.swing.JLabel();
        verifyPopUp3 = new javax.swing.JLabel();
        currentTaskPanel = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel65 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel66 = new javax.swing.JLabel();
        viewAppointmentList1 = new java.awt.List();
        viewAppointmentName1 = new javax.swing.JLabel();
        viewAppointmentContact1 = new javax.swing.JLabel();
        viewAppointmentDoctor2 = new javax.swing.JLabel();
        viewAppointmentReason2 = new javax.swing.JLabel();
        reminderTab = new javax.swing.JPanel();
        reminderPanel = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jButton27 = new javax.swing.JButton();
        jButton28 = new javax.swing.JButton();
        jButton29 = new javax.swing.JButton();
        verifyPopUp = new javax.swing.JLabel();
        unknownPopUp = new javax.swing.JLabel();
        cancelPopUp = new javax.swing.JLabel();
        walk_inPanel = new javax.swing.JPanel();
        jLabel60 = new javax.swing.JLabel();
        walkInReasonForVisitTextField = new javax.swing.JTextField();
        jLabel61 = new javax.swing.JLabel();
        walkInDoctorList = new java.awt.List();
        walkInCheckInButton = new javax.swing.JButton();
        walkInCancelButton = new javax.swing.JButton();
        cancelPopUp1 = new javax.swing.JLabel();
        verifyPopUp1 = new javax.swing.JLabel();
        updateAccountFrame = new javax.swing.JPanel();
        jLabel42 = new javax.swing.JLabel();
        accountHoldersName = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        amountInput = new javax.swing.JTextField();
        currentBalance = new javax.swing.JLabel();
        accountUpdateSubmit = new javax.swing.JButton();
        accountUpdateSubmit1 = new javax.swing.JButton();
        cancelPopUp2 = new javax.swing.JLabel();
        verifyPopUp2 = new javax.swing.JLabel();
        displayPanel = new javax.swing.JPanel();
        mainDisplay = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jButton34 = new javax.swing.JButton();
        jButton35 = new javax.swing.JButton();
        jButton20 = new javax.swing.JButton();
        maindisplayPopLabel = new javax.swing.JLabel();
        taskCheckbox2 = new javax.swing.JCheckBox();
        showTask = new javax.swing.JLabel();
        showTask1 = new java.awt.Label();
        showTask2 = new java.awt.Label();
        jButton7 = new javax.swing.JButton();
        taskCheckbox = new javax.swing.JCheckBox();
        taskCheckbox1 = new javax.swing.JCheckBox();
        taskCheckbox3 = new javax.swing.JCheckBox();
        taskCheckbox4 = new javax.swing.JCheckBox();
        taskCheckbox5 = new javax.swing.JCheckBox();
        showTask3 = new java.awt.Label();
        showTask4 = new java.awt.Label();
        showTask5 = new java.awt.Label();
        addPatientPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        telephoneNumber = new javax.swing.JTextField();
        lastName = new javax.swing.JTextField();
        address = new javax.swing.JTextField();
        eMailAddress = new javax.swing.JTextField();
        firstName = new javax.swing.JTextField();
        emergencyContact = new javax.swing.JTextField();
        socialSecurityNumber = new javax.swing.JTextField();
        insuranceName = new javax.swing.JTextField();
        insuranceCoPay = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        female = new javax.swing.JCheckBox();
        jLabel19 = new javax.swing.JLabel();
        insurancePolicy = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        married = new javax.swing.JCheckBox();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        medicalBackground = new javax.swing.JTextArea();
        jLabel24 = new javax.swing.JLabel();
        male = new javax.swing.JCheckBox();
        addPatientCancelButton = new javax.swing.JButton();
        addPatientPopLabel = new javax.swing.JLabel();
        searchPatientPanel = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jButton14 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jButton16 = new javax.swing.JButton();
        modifyInfoButton = new javax.swing.JButton();
        jButton22 = new javax.swing.JButton();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        searchField = new javax.swing.JTextField();
        searchResults = new java.awt.List();
        updateAccountButton = new javax.swing.JButton();
        addAppointmentButton = new javax.swing.JButton();
        walkInUpdatePopUp = new javax.swing.JLabel();
        searchpateintPopUp1 = new javax.swing.JLabel();
        check_outPanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jButton10 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        checkOutPatientButton = new javax.swing.JButton();
        jLabel54 = new javax.swing.JLabel();
        inProgressList = new java.awt.List();
        checkOutPatientLabel = new javax.swing.JLabel();
        jLabel56 = new javax.swing.JLabel();
        jLabel57 = new javax.swing.JLabel();
        jLabel58 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        diagnosisTextField = new javax.swing.JTextArea();
        jScrollPane5 = new javax.swing.JScrollPane();
        recommendationTextField = new javax.swing.JTextArea();
        costTextField = new javax.swing.JTextField();
        verifyPopUp5 = new javax.swing.JLabel();
        printPopUp6 = new javax.swing.JLabel();
        calendarPanel = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        viewAppointmentCalendar1 = new datechooser.beans.DateChooserPanel();
        searchAppointmentPanel = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jButton18 = new javax.swing.JButton();
        jButton21 = new javax.swing.JButton();
        jLabel49 = new javax.swing.JLabel();
        findAppointmentNameField = new javax.swing.JTextField();
        findAppointmentResultList = new java.awt.List();
        jLabel50 = new javax.swing.JLabel();
        findAppointmentName = new javax.swing.JLabel();
        findAppointmentContact = new javax.swing.JLabel();
        findAppointmentDateTime = new javax.swing.JLabel();
        viewAppointmentDoctor1 = new javax.swing.JLabel();
        viewAppointmentReason1 = new javax.swing.JLabel();
        findAppointmentModifyButton = new javax.swing.JToggleButton();
        findAppointmentDeleteButton = new javax.swing.JToggleButton();
        jButton19 = new javax.swing.JButton();
        removePopUp6 = new javax.swing.JLabel();
        modifyPopUp7 = new javax.swing.JLabel();
        searchAppointmentPopUpLabel = new javax.swing.JLabel();
        patientHistoryPanel = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jButton23 = new javax.swing.JButton();
        jButton24 = new javax.swing.JButton();
        historyPatientName = new javax.swing.JLabel();
        historyVisitList = new java.awt.List();
        historyDoneButton = new javax.swing.JButton();
        historyDisplayButton = new javax.swing.JButton();
        verifyPopUp6 = new javax.swing.JLabel();
        showHistoryPopUp = new javax.swing.JLabel();
        printpathistoryPopUp = new javax.swing.JLabel();
        addAppointmentPanel = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jButton31 = new javax.swing.JButton();
        jButton32 = new javax.swing.JButton();
        appointmentPatientName = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        reasonForVisitField = new javax.swing.JTextField();
        jLabel46 = new javax.swing.JLabel();
        appointmentDoctorList = new java.awt.List();
        dateChooserPanel1 = new datechooser.beans.DateChooserPanel();
        availableTimesList = new java.awt.List();
        jLabel47 = new javax.swing.JLabel();
        addPatientCancelButton1 = new javax.swing.JButton();
        addapointmentPopUp = new javax.swing.JLabel();
        viewAppointmentPanel = new javax.swing.JPanel();
        jLabel48 = new javax.swing.JLabel();
        jButton33 = new javax.swing.JButton();
        viewAppointmentCalendar = new datechooser.beans.DateChooserPanel();
        viewAppointmentList = new java.awt.List();
        viewAppointmentName = new javax.swing.JLabel();
        viewAppointmentContact = new javax.swing.JLabel();
        viewAppointmentDoctor = new javax.swing.JLabel();
        viewAppointmentReason = new javax.swing.JLabel();
        viewAppointmentsModifyButton = new javax.swing.JToggleButton();
        viewAppointmentsDelteButton = new javax.swing.JToggleButton();
        cancelPopUp7 = new javax.swing.JLabel();
        jLabel64 = new javax.swing.JLabel();
        configurePanel = new javax.swing.JPanel();
        jLabel51 = new javax.swing.JLabel();
        jButton17 = new javax.swing.JButton();
        jLabel52 = new javax.swing.JLabel();
        doctorList = new java.awt.List();
        removeDoctorButton = new javax.swing.JButton();
        addDoctorField = new javax.swing.JTextField();
        addDoctorButton = new javax.swing.JButton();
        jLabel62 = new javax.swing.JLabel();
        jLabel63 = new javax.swing.JLabel();
        datePanel = new javax.swing.JPanel();
        dateLabel = new javax.swing.JLabel();
        actionPanel = new javax.swing.JPanel();
        actionsLabel = new javax.swing.JLabel();
        logoPanel = new javax.swing.JPanel();
        jLabel53 = new javax.swing.JLabel();
        buttonPanel = new javax.swing.JPanel();
        jButton6 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        addButtonPopUp = new javax.swing.JLabel();
        checkoutPopUp2 = new javax.swing.JLabel();
        addAppointtPopUp3 = new javax.swing.JLabel();
        calendarPopUp3 = new javax.swing.JLabel();
        mainpopUp4 = new javax.swing.JLabel();
        addButtonPopUp1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAutoRequestFocus(false);
        setBackground(new java.awt.Color(0, 0, 0));

        dayPanel.setBackground(new java.awt.Color(119, 138, 153));
        dayPanel.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        dayPanel.setPreferredSize(new java.awt.Dimension(103, 79));

        javax.swing.GroupLayout dayPanelLayout = new javax.swing.GroupLayout(dayPanel);
        dayPanel.setLayout(dayPanelLayout);
        dayPanelLayout.setHorizontalGroup(
            dayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dayPanelLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(dayLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        dayPanelLayout.setVerticalGroup(
            dayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dayPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(dayLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        clockPanel.setBackground(new java.awt.Color(119, 138, 153));
        clockPanel.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        clockPanel.setPreferredSize(new java.awt.Dimension(208, 79));

        javax.swing.GroupLayout clockPanelLayout = new javax.swing.GroupLayout(clockPanel);
        clockPanel.setLayout(clockPanelLayout);
        clockPanelLayout.setHorizontalGroup(
            clockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 203, Short.MAX_VALUE)
        );
        clockPanelLayout.setVerticalGroup(
            clockPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        extraRightPanel.setBackground(new java.awt.Color(255, 255, 255));
        extraRightPanel.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 2, 0, 2, new java.awt.Color(0, 0, 0)));
        extraRightPanel.setPreferredSize(new java.awt.Dimension(392, 445));
        extraRightPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                extraRightPanelMouseClicked(evt);
            }
        });
        extraRightPanel.setLayout(new java.awt.CardLayout());

        timeChartPanel.setBackground(new java.awt.Color(245, 245, 220));
        timeChartPanel.setPreferredSize(new java.awt.Dimension(384, 445));

        jLabel41.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel41.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel41.setText("Time Chart");
        jLabel41.setToolTipText("");

        javax.swing.GroupLayout timeChartPanelLayout = new javax.swing.GroupLayout(timeChartPanel);
        timeChartPanel.setLayout(timeChartPanelLayout);
        timeChartPanelLayout.setHorizontalGroup(
            timeChartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(timeChartPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel41, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(265, Short.MAX_VALUE))
        );
        timeChartPanelLayout.setVerticalGroup(
            timeChartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(timeChartPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel41, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(387, Short.MAX_VALUE))
        );

        extraRightPanel.add(timeChartPanel, "card32");

        modifyPatientPanel.setBackground(new java.awt.Color(245, 245, 220));
        modifyPatientPanel.setPreferredSize(new java.awt.Dimension(388, 445));

        jLabel27.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel27.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel27.setText("Modify Patient");
        jLabel27.setToolTipText("");

        jLabel28.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel28.setText("First Name");

        jLabel29.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel29.setText("Last Name");

        jLabel30.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel30.setText("Address");

        jLabel31.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel31.setText("Phone Number");

        jLabel32.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel32.setText("Emergency Contact");

        jLabel33.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel33.setText("E-mail Address");

        jLabel34.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel34.setText("Sex");

        male1.setText("Male");
        male1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                male1CheckBoxButton(evt);
            }
        });

        female1.setText("Female");
        female1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                female1CheckBox(evt);
            }
        });

        jLabel35.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel35.setText("Social Security Number");

        modifyPatientPanel2Button.setBackground(java.awt.SystemColor.activeCaption);
        modifyPatientPanel2Button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/meddata/icons/Actions-go-next-icon.png"))); // NOI18N
        modifyPatientPanel2Button.setBorderPainted(false);
        modifyPatientPanel2Button.setContentAreaFilled(false);
        modifyPatientPanel2Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifyPatientPanel2(evt);
            }
        });

        modifyPatientCancel1.setBackground(java.awt.SystemColor.activeCaption);
        modifyPatientCancel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/meddata/icons/newclose.png"))); // NOI18N
        modifyPatientCancel1.setBorderPainted(false);
        modifyPatientCancel1.setContentAreaFilled(false);
        modifyPatientCancel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                modifyPatientCancel1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                modifyPatientCancel1MouseExited(evt);
            }
        });
        modifyPatientCancel1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifyPatientCancel1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout modifyPatientPanelLayout = new javax.swing.GroupLayout(modifyPatientPanel);
        modifyPatientPanel.setLayout(modifyPatientPanelLayout);
        modifyPatientPanelLayout.setHorizontalGroup(
            modifyPatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, modifyPatientPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(modifyPatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(modifyPatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(modifyPatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(modifyPatientPanelLayout.createSequentialGroup()
                                .addComponent(jLabel31)
                                .addGap(69, 69, 69)
                                .addComponent(jLabel32))
                            .addGroup(modifyPatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(address1)
                                .addGroup(modifyPatientPanelLayout.createSequentialGroup()
                                    .addGroup(modifyPatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, modifyPatientPanelLayout.createSequentialGroup()
                                            .addComponent(firstName1, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(37, 37, 37))
                                        .addGroup(modifyPatientPanelLayout.createSequentialGroup()
                                            .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(68, 68, 68)))
                                    .addGroup(modifyPatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lastName1)))
                                .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(modifyPatientPanelLayout.createSequentialGroup()
                                    .addComponent(telephoneNumber1, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(53, 53, 53)
                                    .addComponent(emergencyContact1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jLabel33)
                                .addComponent(jLabel35)))
                        .addComponent(eMailAddress1, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(modifyPatientPanelLayout.createSequentialGroup()
                            .addComponent(jLabel34)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(male1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(26, 26, 26)
                            .addComponent(female1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(81, 81, 81)))
                    .addComponent(socialSecurityNumber1, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(modifyPatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, modifyPatientPanelLayout.createSequentialGroup()
                        .addComponent(cancelPopUp5, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(49, 49, 49))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, modifyPatientPanelLayout.createSequentialGroup()
                        .addComponent(modifyPatientPanel2Button, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(66, 66, 66))
                    .addGroup(modifyPatientPanelLayout.createSequentialGroup()
                        .addComponent(modifyPatientCancel1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        modifyPatientPanelLayout.setVerticalGroup(
            modifyPatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(modifyPatientPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(modifyPatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, modifyPatientPanelLayout.createSequentialGroup()
                        .addComponent(cancelPopUp5, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(modifyPatientCancel1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(modifyPatientPanel2Button, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(modifyPatientPanelLayout.createSequentialGroup()
                        .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)
                        .addGroup(modifyPatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel29)
                            .addComponent(jLabel28))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(modifyPatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(firstName1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lastName1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel30)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(address1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(modifyPatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel31)
                            .addComponent(jLabel32))
                        .addGap(18, 18, 18)
                        .addGroup(modifyPatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(telephoneNumber1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(emergencyContact1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel33)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(eMailAddress1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(modifyPatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel34)
                            .addComponent(male1)
                            .addComponent(female1))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel35)
                        .addGap(7, 7, 7)
                        .addComponent(socialSecurityNumber1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        extraRightPanel.add(modifyPatientPanel, "card20");

        jPanel8.setBackground(new java.awt.Color(245, 245, 220));
        jPanel8.setPreferredSize(new java.awt.Dimension(384, 445));

        jLabel40.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel40.setText("Medical Background and Comments");

        medicalBackground1.setColumns(20);
        medicalBackground1.setRows(5);
        jScrollPane3.setViewportView(medicalBackground1);

        modifyPatientDone.setBackground(java.awt.SystemColor.activeCaption);
        modifyPatientDone.setIcon(new javax.swing.ImageIcon(getClass().getResource("/meddata/icons/Ok-icon.png"))); // NOI18N
        modifyPatientDone.setBorderPainted(false);
        modifyPatientDone.setContentAreaFilled(false);
        modifyPatientDone.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                modifyPatientDoneMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                modifyPatientDoneMouseExited(evt);
            }
        });
        modifyPatientDone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifyPatientDonemodifyPatientPanel2(evt);
            }
        });

        modifyPatientCancel.setBackground(java.awt.SystemColor.activeCaption);
        modifyPatientCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/meddata/icons/newclose.png"))); // NOI18N
        modifyPatientCancel.setBorderPainted(false);
        modifyPatientCancel.setContentAreaFilled(false);
        modifyPatientCancel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                modifyPatientCancelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                modifyPatientCancelMouseExited(evt);
            }
        });
        modifyPatientCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifyPatientCancelActionPerformed(evt);
            }
        });

        modifyPatientBack.setBackground(java.awt.SystemColor.activeCaption);
        modifyPatientBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/meddata/icons/Actions-go-previous-icon.png"))); // NOI18N
        modifyPatientBack.setBorderPainted(false);
        modifyPatientBack.setContentAreaFilled(false);
        modifyPatientBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifyPatientBackActionPerformed(evt);
            }
        });

        jLabel36.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel36.setText("Martial Status");

        married1.setText("Married");
        married1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                married1marriageStatusCheckBox(evt);
            }
        });

        jLabel37.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel37.setText("Co-Pay");

        insuranceCoPay1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insuranceCoPay1ActionPerformed(evt);
            }
        });

        jLabel38.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel38.setText("Insurance name");

        jLabel39.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel39.setText("Insurance Policy #");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(modifyPatientBack, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(modifyPatientCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(modifyPatientDone, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cancelPopUp4, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(verifyPopUp4, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel40, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel8Layout.createSequentialGroup()
                            .addComponent(jLabel39)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(insurancePolicy1))
                        .addGroup(jPanel8Layout.createSequentialGroup()
                            .addComponent(jLabel38)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(insuranceName1, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel8Layout.createSequentialGroup()
                            .addComponent(jLabel37)
                            .addGap(18, 18, 18)
                            .addComponent(insuranceCoPay1, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel8Layout.createSequentialGroup()
                            .addComponent(jLabel36)
                            .addGap(18, 18, 18)
                            .addComponent(married1))))
                .addGap(0, 8, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel36)
                    .addComponent(married1))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel37)
                    .addComponent(insuranceCoPay1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel38)
                    .addComponent(insuranceName1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel39)
                    .addComponent(insurancePolicy1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addComponent(jLabel40)
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(modifyPatientBack, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancelPopUp4, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(modifyPatientCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(verifyPopUp4, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(modifyPatientDone, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane3))
                .addGap(0, 22, Short.MAX_VALUE))
        );

        extraRightPanel.add(jPanel8, "card31");

        check_inPanel.setBackground(new java.awt.Color(245, 245, 220));
        check_inPanel.setPreferredSize(new java.awt.Dimension(384, 445));

        jLabel59.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel59.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel59.setText("Check In");
        jLabel59.setToolTipText("");

        todaysAppointmentList.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                todaysAppointmentListFocusGained(evt);
            }
        });
        todaysAppointmentList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                todaysAppointmentListActionPerformed(evt);
            }
        });

        checkInButton.setBackground(java.awt.SystemColor.activeCaption);
        checkInButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/meddata/icons/Ok-icon.png"))); // NOI18N
        checkInButton.setBorderPainted(false);
        checkInButton.setContentAreaFilled(false);
        checkInButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                checkInButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                checkInButtonMouseExited(evt);
            }
        });
        checkInButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkInButtonActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel8.setText("Today's Appointments");

        checkInButton1.setBackground(java.awt.SystemColor.activeCaption);
        checkInButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/meddata/icons/newclose.png"))); // NOI18N
        checkInButton1.setBorderPainted(false);
        checkInButton1.setContentAreaFilled(false);
        checkInButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                checkInButton1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                checkInButton1MouseExited(evt);
            }
        });
        checkInButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkInButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout check_inPanelLayout = new javax.swing.GroupLayout(check_inPanel);
        check_inPanel.setLayout(check_inPanelLayout);
        check_inPanelLayout.setHorizontalGroup(
            check_inPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(check_inPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(check_inPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(check_inPanelLayout.createSequentialGroup()
                        .addComponent(jLabel59, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(check_inPanelLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(check_inPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(check_inPanelLayout.createSequentialGroup()
                                .addGroup(check_inPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(todaysAppointmentList, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, check_inPanelLayout.createSequentialGroup()
                                        .addComponent(checkInButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(13, 13, 13)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                                .addComponent(checkInButton, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(check_inPanelLayout.createSequentialGroup()
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, check_inPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(cancelPopUp3, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(verifyPopUp3, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        check_inPanelLayout.setVerticalGroup(
            check_inPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, check_inPanelLayout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jLabel59, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(todaysAppointmentList, javax.swing.GroupLayout.DEFAULT_SIZE, 261, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(check_inPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(check_inPanelLayout.createSequentialGroup()
                        .addComponent(cancelPopUp3, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)
                        .addComponent(checkInButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(check_inPanelLayout.createSequentialGroup()
                        .addComponent(verifyPopUp3, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(checkInButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        extraRightPanel.add(check_inPanel, "card35");

        currentTaskPanel.setBackground(new java.awt.Color(119, 136, 153));
        currentTaskPanel.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        currentTaskPanel.setLayout(new java.awt.CardLayout());

        jPanel3.setBackground(new java.awt.Color(119, 136, 153));

        jLabel10.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Task Information");
        jLabel10.setToolTipText("");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(287, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(125, Short.MAX_VALUE))
        );

        currentTaskPanel.add(jPanel3, "card92");

        jPanel1.setBackground(new java.awt.Color(119, 136, 153));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(104, 104, 104)
                .addComponent(jLabel65, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(189, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addComponent(jLabel65, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(46, Short.MAX_VALUE))
        );

        currentTaskPanel.add(jPanel1, "card90");

        jPanel2.setBackground(new java.awt.Color(119, 136, 153));

        jLabel66.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel66.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel66.setText("Selected Day Appointments");
        jLabel66.setToolTipText("");

        viewAppointmentList1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewAppointmentList1ActionPerformed(evt);
            }
        });

        viewAppointmentName1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        viewAppointmentName1.setText("Name:");

        viewAppointmentContact1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        viewAppointmentContact1.setText("Contact:");

        viewAppointmentDoctor2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        viewAppointmentDoctor2.setText("Doctor:");

        viewAppointmentReason2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        viewAppointmentReason2.setText("Reason:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel66, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(viewAppointmentList1, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(viewAppointmentName1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(viewAppointmentContact1)
                            .addComponent(viewAppointmentDoctor2)
                            .addComponent(viewAppointmentReason2))))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel66, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(viewAppointmentList1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(viewAppointmentName1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(viewAppointmentContact1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(viewAppointmentDoctor2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(viewAppointmentReason2)
                        .addGap(0, 6, Short.MAX_VALUE)))
                .addContainerGap())
        );

        currentTaskPanel.add(jPanel2, "card91");

        reminderTab.setBackground(new java.awt.Color(255, 255, 255));
        reminderTab.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 2, 1, 2, new java.awt.Color(0, 0, 0)));
        reminderTab.setLayout(new java.awt.CardLayout());

        reminderPanel.setBackground(new java.awt.Color(119, 136, 153));

        jLabel7.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel7.setText("Reminder Tab");

        jButton27.setBackground(java.awt.SystemColor.activeCaption);
        jButton27.setIcon(new javax.swing.ImageIcon(getClass().getResource("/meddata/icons/unknown.png"))); // NOI18N
        jButton27.setBorderPainted(false);
        jButton27.setContentAreaFilled(false);
        jButton27.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton27MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton27MouseExited(evt);
            }
        });

        jButton28.setBackground(java.awt.SystemColor.activeCaption);
        jButton28.setIcon(new javax.swing.ImageIcon(getClass().getResource("/meddata/icons/newclose.png"))); // NOI18N
        jButton28.setBorderPainted(false);
        jButton28.setContentAreaFilled(false);
        jButton28.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton28MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton28MouseExited(evt);
            }
        });

        jButton29.setBackground(java.awt.SystemColor.activeCaption);
        jButton29.setIcon(new javax.swing.ImageIcon(getClass().getResource("/meddata/icons/Ok-icon.png"))); // NOI18N
        jButton29.setBorderPainted(false);
        jButton29.setContentAreaFilled(false);
        jButton29.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton29MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton29MouseExited(evt);
            }
        });

        javax.swing.GroupLayout reminderPanelLayout = new javax.swing.GroupLayout(reminderPanel);
        reminderPanel.setLayout(reminderPanelLayout);
        reminderPanelLayout.setHorizontalGroup(
            reminderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(reminderPanelLayout.createSequentialGroup()
                .addGroup(reminderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(reminderPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(reminderPanelLayout.createSequentialGroup()
                        .addGroup(reminderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(reminderPanelLayout.createSequentialGroup()
                                .addGap(72, 72, 72)
                                .addComponent(verifyPopUp, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(reminderPanelLayout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addComponent(jButton29, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(reminderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(reminderPanelLayout.createSequentialGroup()
                                .addGap(62, 62, 62)
                                .addComponent(unknownPopUp, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(reminderPanelLayout.createSequentialGroup()
                                .addGap(46, 46, 46)
                                .addComponent(jButton27, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 107, Short.MAX_VALUE)
                        .addGroup(reminderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cancelPopUp, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton28, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(51, 51, 51))
        );
        reminderPanelLayout.setVerticalGroup(
            reminderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(reminderPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(reminderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(reminderPanelLayout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                        .addComponent(unknownPopUp, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(verifyPopUp, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))
                    .addGroup(reminderPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(cancelPopUp, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(51, 51, 51)))
                .addGroup(reminderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton29)
                    .addComponent(jButton27)
                    .addComponent(jButton28))
                .addContainerGap())
        );

        reminderTab.add(reminderPanel, "card9");

        walk_inPanel.setBackground(new java.awt.Color(119, 136, 153));

        jLabel60.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel60.setText("Reason For Visit");

        jLabel61.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel61.setText("Doctor");

        walkInCheckInButton.setBackground(java.awt.SystemColor.activeCaption);
        walkInCheckInButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/meddata/icons/Ok-icon.png"))); // NOI18N
        walkInCheckInButton.setBorderPainted(false);
        walkInCheckInButton.setContentAreaFilled(false);
        walkInCheckInButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                walkInCheckInButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                walkInCheckInButtonMouseExited(evt);
            }
        });
        walkInCheckInButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                walkInCheckInButtonActionPerformed(evt);
            }
        });

        walkInCancelButton.setBackground(java.awt.SystemColor.activeCaption);
        walkInCancelButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/meddata/icons/newclose.png"))); // NOI18N
        walkInCancelButton.setBorderPainted(false);
        walkInCancelButton.setContentAreaFilled(false);
        walkInCancelButton.setMinimumSize(new java.awt.Dimension(400, 300));
        walkInCancelButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                walkInCancelButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                walkInCancelButtonMouseExited(evt);
            }
        });
        walkInCancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                walkInCancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout walk_inPanelLayout = new javax.swing.GroupLayout(walk_inPanel);
        walk_inPanel.setLayout(walk_inPanelLayout);
        walk_inPanelLayout.setHorizontalGroup(
            walk_inPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(walk_inPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(walk_inPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel60, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel61, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(walkInDoctorList, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 294, Short.MAX_VALUE)
                    .addComponent(walkInReasonForVisitTextField, javax.swing.GroupLayout.Alignment.LEADING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(walk_inPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(walkInCancelButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(walkInCheckInButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(walk_inPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cancelPopUp1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(verifyPopUp1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37))
        );
        walk_inPanelLayout.setVerticalGroup(
            walk_inPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(walk_inPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel60)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(walk_inPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(walk_inPanelLayout.createSequentialGroup()
                        .addComponent(walkInReasonForVisitTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel61)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(walkInDoctorList, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(walk_inPanelLayout.createSequentialGroup()
                        .addGroup(walk_inPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(walkInCancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(walk_inPanelLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(cancelPopUp1, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(29, 29, 29)
                        .addGroup(walk_inPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(walkInCheckInButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, walk_inPanelLayout.createSequentialGroup()
                                .addComponent(verifyPopUp1, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(12, 12, 12)))))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        reminderTab.add(walk_inPanel, "card10");

        updateAccountFrame.setBackground(new java.awt.Color(119, 136, 153));

        jLabel42.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel42.setText("Update Account");

        accountHoldersName.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        accountHoldersName.setText("jLabel29");

        jLabel43.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel43.setText("Current Balance:");

        jLabel44.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel44.setText("Payment amount:");

        amountInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                amountInputActionPerformed(evt);
            }
        });

        currentBalance.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        currentBalance.setText("jLabel30");

        accountUpdateSubmit.setBackground(java.awt.SystemColor.activeCaption);
        accountUpdateSubmit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/meddata/icons/Ok-icon.png"))); // NOI18N
        accountUpdateSubmit.setContentAreaFilled(false);
        accountUpdateSubmit.setDefaultCapable(false);
        accountUpdateSubmit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                accountUpdateSubmitMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                accountUpdateSubmitMouseExited(evt);
            }
        });
        accountUpdateSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accountUpdateSubmitActionPerformed(evt);
            }
        });

        accountUpdateSubmit1.setBackground(java.awt.SystemColor.activeCaption);
        accountUpdateSubmit1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/meddata/icons/newclose.png"))); // NOI18N
        accountUpdateSubmit1.setBorderPainted(false);
        accountUpdateSubmit1.setContentAreaFilled(false);
        accountUpdateSubmit1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                accountUpdateSubmit1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                accountUpdateSubmit1MouseExited(evt);
            }
        });
        accountUpdateSubmit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accountUpdateSubmit1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout updateAccountFrameLayout = new javax.swing.GroupLayout(updateAccountFrame);
        updateAccountFrame.setLayout(updateAccountFrameLayout);
        updateAccountFrameLayout.setHorizontalGroup(
            updateAccountFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(updateAccountFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(updateAccountFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(updateAccountFrameLayout.createSequentialGroup()
                        .addGroup(updateAccountFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel44)
                            .addComponent(jLabel43))
                        .addGap(37, 37, 37)
                        .addGroup(updateAccountFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(currentBalance, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(amountInput, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, updateAccountFrameLayout.createSequentialGroup()
                        .addGroup(updateAccountFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(accountHoldersName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel42, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(updateAccountFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(updateAccountFrameLayout.createSequentialGroup()
                                .addComponent(accountUpdateSubmit1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cancelPopUp2, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(updateAccountFrameLayout.createSequentialGroup()
                                .addComponent(accountUpdateSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(verifyPopUp2, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(33, 33, 33))))
        );
        updateAccountFrameLayout.setVerticalGroup(
            updateAccountFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(updateAccountFrameLayout.createSequentialGroup()
                .addGroup(updateAccountFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(updateAccountFrameLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(updateAccountFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(accountUpdateSubmit)
                            .addGroup(updateAccountFrameLayout.createSequentialGroup()
                                .addComponent(jLabel42, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(94, 94, 94)
                                .addGroup(updateAccountFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(amountInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel44)))))
                    .addGroup(updateAccountFrameLayout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(updateAccountFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(accountUpdateSubmit1)
                            .addGroup(updateAccountFrameLayout.createSequentialGroup()
                                .addComponent(accountHoldersName, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(23, 23, 23)
                                .addGroup(updateAccountFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel43)
                                    .addComponent(currentBalance))))))
                .addGap(0, 14, Short.MAX_VALUE))
            .addGroup(updateAccountFrameLayout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(cancelPopUp2, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(verifyPopUp2, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44))
        );

        reminderTab.add(updateAccountFrame, "card20");

        displayPanel.setBorder(new javax.swing.border.MatteBorder(null));
        displayPanel.setToolTipText("");
        displayPanel.setPreferredSize(new java.awt.Dimension(890, 445));
        displayPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseClicked(evt);
            }
        });
        displayPanel.setLayout(new java.awt.CardLayout());

        mainDisplay.setBackground(new java.awt.Color(245, 245, 220));
        mainDisplay.setPreferredSize(new java.awt.Dimension(890, 445));

        jLabel6.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Daily Task/Main Display");
        jLabel6.setToolTipText("");

        jButton34.setBackground(java.awt.SystemColor.activeCaption);
        jButton34.setIcon(new javax.swing.ImageIcon(getClass().getResource("/meddata/icons/viewappointmentnew.png"))); // NOI18N
        jButton34.setToolTipText("");
        jButton34.setBorderPainted(false);
        jButton34.setContentAreaFilled(false);
        jButton34.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton34MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton34MouseExited(evt);
            }
        });
        jButton34.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton34addAppointmentBackButton(evt);
            }
        });

        jButton35.setBackground(java.awt.SystemColor.activeCaption);
        jButton35.setIcon(new javax.swing.ImageIcon(getClass().getResource("/meddata/icons/fix.png"))); // NOI18N
        jButton35.setToolTipText("");
        jButton35.setBorderPainted(false);
        jButton35.setContentAreaFilled(false);
        jButton35.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton35MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton35MouseExited(evt);
            }
        });
        jButton35.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton35addAppointmentBackButton(evt);
            }
        });

        jButton20.setBackground(java.awt.SystemColor.activeCaption);
        jButton20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/meddata/icons/checkinnew.png"))); // NOI18N
        jButton20.setBorderPainted(false);
        jButton20.setContentAreaFilled(false);
        jButton20.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jButton20MouseMoved(evt);
            }
        });
        jButton20.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton20MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton20MouseExited(evt);
            }
        });
        jButton20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton20check_inButton(evt);
            }
        });

        taskCheckbox2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        taskCheckbox2.setIconTextGap(10);
        taskCheckbox2.setOpaque(false);

        showTask.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N

        jButton7.setText("Show Task");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        taskCheckbox.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        taskCheckbox.setIconTextGap(10);
        taskCheckbox.setOpaque(false);

        taskCheckbox1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        taskCheckbox1.setIconTextGap(10);
        taskCheckbox1.setOpaque(false);

        taskCheckbox3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        taskCheckbox3.setIconTextGap(10);
        taskCheckbox3.setOpaque(false);

        taskCheckbox4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        taskCheckbox4.setIconTextGap(10);
        taskCheckbox4.setOpaque(false);

        taskCheckbox5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        taskCheckbox5.setIconTextGap(10);
        taskCheckbox5.setOpaque(false);

        javax.swing.GroupLayout mainDisplayLayout = new javax.swing.GroupLayout(mainDisplay);
        mainDisplay.setLayout(mainDisplayLayout);
        mainDisplayLayout.setHorizontalGroup(
            mainDisplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainDisplayLayout.createSequentialGroup()
                .addGroup(mainDisplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainDisplayLayout.createSequentialGroup()
                        .addGap(449, 449, 449)
                        .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(mainDisplayLayout.createSequentialGroup()
                        .addGroup(mainDisplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(mainDisplayLayout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addGroup(mainDisplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(taskCheckbox1)
                                    .addComponent(taskCheckbox)
                                    .addComponent(taskCheckbox2)
                                    .addComponent(taskCheckbox3)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainDisplayLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(mainDisplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(taskCheckbox5, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(taskCheckbox4, javax.swing.GroupLayout.Alignment.TRAILING))))
                        .addGap(49, 49, 49)
                        .addGroup(mainDisplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(mainDisplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(showTask, javax.swing.GroupLayout.DEFAULT_SIZE, 452, Short.MAX_VALUE)
                                .addComponent(showTask1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(showTask3, javax.swing.GroupLayout.PREFERRED_SIZE, 401, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(showTask4, javax.swing.GroupLayout.PREFERRED_SIZE, 393, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(showTask2, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(showTask5, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(173, 173, 173)
                .addComponent(jButton20, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton35, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton34, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(mainDisplayLayout.createSequentialGroup()
                .addGroup(mainDisplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainDisplayLayout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainDisplayLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(maindisplayPopLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        mainDisplayLayout.setVerticalGroup(
            mainDisplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainDisplayLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addGroup(mainDisplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(showTask)
                    .addComponent(taskCheckbox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addGroup(mainDisplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainDisplayLayout.createSequentialGroup()
                        .addComponent(showTask1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(25, 25, 25)
                        .addComponent(showTask2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(mainDisplayLayout.createSequentialGroup()
                        .addComponent(taskCheckbox1)
                        .addGap(26, 26, 26)
                        .addComponent(taskCheckbox2)))
                .addGroup(mainDisplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainDisplayLayout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(mainDisplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(showTask3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(taskCheckbox3))
                        .addGap(28, 28, 28)
                        .addGroup(mainDisplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(showTask4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(taskCheckbox4))
                        .addGap(35, 35, 35)
                        .addGroup(mainDisplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(showTask5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(taskCheckbox5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 72, Short.MAX_VALUE)
                        .addComponent(jButton7))
                    .addGroup(mainDisplayLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(maindisplayPopLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(mainDisplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton34, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton35, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton20, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addGap(18, 18, 18))
        );

        displayPanel.add(mainDisplay, "card7");

        addPatientPanel.setBackground(new java.awt.Color(245, 245, 220));
        addPatientPanel.setPreferredSize(new java.awt.Dimension(890, 445));

        jLabel1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Add Patient");
        jLabel1.setToolTipText("");

        jButton11.setBackground(java.awt.SystemColor.activeCaption);
        jButton11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/meddata/icons/Actions-list-add-icon.png"))); // NOI18N
        jButton11.setBorderPainted(false);
        jButton11.setContentAreaFilled(false);
        jButton11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton11MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton11MouseExited(evt);
            }
        });
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPatientButton(evt);
            }
        });

        jButton12.setBackground(java.awt.SystemColor.activeCaption);
        jButton12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/meddata/icons/Actions-go-previous-icon.png"))); // NOI18N
        jButton12.setBorderPainted(false);
        jButton12.setContentAreaFilled(false);
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPatientBackButton(evt);
            }
        });

        insuranceCoPay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insuranceCoPayActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setText("First Name");

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel13.setText("Last Name");

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel14.setText("Address");

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel15.setText("Emergency Contact");

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel16.setText("Phone Number");

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel17.setText("E-mail Address");

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel18.setText("Sex");

        female.setText("Female");
        female.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                femaleCheckBox(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel19.setText("Social Security Number");

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel20.setText("Martial Status");

        married.setText("Married");
        married.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                marriageStatusCheckBox(evt);
            }
        });

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel21.setText("Insurance name");

        jLabel22.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel22.setText("Insurance Policy #");

        jLabel23.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel23.setText("Co-Pay");

        medicalBackground.setColumns(20);
        medicalBackground.setRows(5);
        jScrollPane1.setViewportView(medicalBackground);

        jLabel24.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel24.setText("Medical Background and Comments");

        male.setText("Male");
        male.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maleCheckBoxButton(evt);
            }
        });

        addPatientCancelButton.setBackground(java.awt.SystemColor.activeCaption);
        addPatientCancelButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/meddata/icons/newclose.png"))); // NOI18N
        addPatientCancelButton.setBorderPainted(false);
        addPatientCancelButton.setContentAreaFilled(false);
        addPatientCancelButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                addPatientCancelButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                addPatientCancelButtonMouseExited(evt);
            }
        });
        addPatientCancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPatientCancelButtonaddPatientButton(evt);
            }
        });

        javax.swing.GroupLayout addPatientPanelLayout = new javax.swing.GroupLayout(addPatientPanel);
        addPatientPanel.setLayout(addPatientPanelLayout);
        addPatientPanelLayout.setHorizontalGroup(
            addPatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addPatientPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addPatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addPatientPanelLayout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(addPatientPanelLayout.createSequentialGroup()
                        .addGroup(addPatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel17)
                            .addGroup(addPatientPanelLayout.createSequentialGroup()
                                .addGroup(addPatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(firstName, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(48, 48, 48)
                                .addGroup(addPatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lastName, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(address)
                            .addComponent(eMailAddress)
                            .addComponent(jLabel16)
                            .addComponent(telephoneNumber)
                            .addComponent(jLabel15)
                            .addComponent(emergencyContact))
                        .addGap(18, 18, 18)
                        .addGroup(addPatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(addPatientPanelLayout.createSequentialGroup()
                                .addComponent(jLabel21)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(insuranceName, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(socialSecurityNumber)
                            .addGroup(addPatientPanelLayout.createSequentialGroup()
                                .addGroup(addPatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(addPatientPanelLayout.createSequentialGroup()
                                        .addGap(4, 4, 4)
                                        .addComponent(jLabel18)
                                        .addGap(18, 18, 18)
                                        .addComponent(male, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(3, 3, 3)
                                        .addComponent(female, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel19)
                                    .addGroup(addPatientPanelLayout.createSequentialGroup()
                                        .addGroup(addPatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel23)
                                            .addComponent(jLabel20))
                                        .addGroup(addPatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(addPatientPanelLayout.createSequentialGroup()
                                                .addGap(18, 18, 18)
                                                .addComponent(married))
                                            .addGroup(addPatientPanelLayout.createSequentialGroup()
                                                .addGap(60, 60, 60)
                                                .addComponent(insuranceCoPay, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(addPatientPanelLayout.createSequentialGroup()
                                        .addComponent(jLabel22)
                                        .addGap(29, 29, 29)
                                        .addComponent(insurancePolicy, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(18, 18, 18)
                        .addGroup(addPatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(addPatientPanelLayout.createSequentialGroup()
                                .addGroup(addPatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(60, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addPatientPanelLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(addPatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(addPatientPanelLayout.createSequentialGroup()
                                        .addComponent(addPatientPopLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(38, 38, 38))
                                    .addGroup(addPatientPanelLayout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(addPatientCancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addContainerGap())))))))
        );
        addPatientPanelLayout.setVerticalGroup(
            addPatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addPatientPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(addPatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jLabel13)
                    .addComponent(jLabel18)
                    .addComponent(male)
                    .addComponent(female)
                    .addComponent(jLabel24))
                .addGroup(addPatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addPatientPanelLayout.createSequentialGroup()
                        .addGap(171, 171, 171)
                        .addComponent(telephoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(emergencyContact, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel17)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addPatientPanelLayout.createSequentialGroup()
                        .addGroup(addPatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(addPatientPanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1))
                            .addGroup(addPatientPanelLayout.createSequentialGroup()
                                .addGroup(addPatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(addPatientPanelLayout.createSequentialGroup()
                                        .addGap(20, 20, 20)
                                        .addComponent(jLabel19)
                                        .addGap(18, 18, 18)
                                        .addComponent(socialSecurityNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addGroup(addPatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel20)
                                            .addComponent(married))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(addPatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel23)
                                            .addComponent(insuranceCoPay, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(addPatientPanelLayout.createSequentialGroup()
                                        .addGroup(addPatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(firstName, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lastName, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(17, 17, 17)
                                        .addComponent(jLabel14)
                                        .addGap(18, 18, 18)
                                        .addComponent(address, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel16)
                                        .addGap(0, 0, Short.MAX_VALUE)))
                                .addGap(18, 18, 18)
                                .addGroup(addPatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(insuranceName, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel21))
                                .addGap(27, 27, 27)
                                .addGroup(addPatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel22)
                                    .addComponent(insurancePolicy, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(31, 31, 31)))
                .addGroup(addPatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(eMailAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(addPatientPanelLayout.createSequentialGroup()
                        .addComponent(addPatientPopLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(addPatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(addPatientPanelLayout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addGroup(addPatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(addPatientCancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(addPatientPanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(247, 247, 247))
        );

        displayPanel.add(addPatientPanel, "card2");

        searchPatientPanel.setBackground(new java.awt.Color(245, 245, 220));
        searchPatientPanel.setPreferredSize(new java.awt.Dimension(890, 445));

        jLabel4.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Search Patient");
        jLabel4.setToolTipText("");

        jButton14.setBackground(java.awt.SystemColor.activeCaption);
        jButton14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/meddata/icons/addpatient.png"))); // NOI18N
        jButton14.setBorderPainted(false);
        jButton14.setContentAreaFilled(false);
        jButton14.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton14MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton14MouseExited(evt);
            }
        });
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPatientPanelButtonsearch(evt);
            }
        });

        jButton15.setBackground(java.awt.SystemColor.activeCaption);
        jButton15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/meddata/icons/Actions-go-previous-icon.png"))); // NOI18N
        jButton15.setBorderPainted(false);
        jButton15.setContentAreaFilled(false);
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchPatientBackButton(evt);
            }
        });

        jButton16.setBackground(java.awt.SystemColor.activeCaption);
        jButton16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/meddata/icons/102-walk-icon.png"))); // NOI18N
        jButton16.setBorderPainted(false);
        jButton16.setContentAreaFilled(false);
        jButton16.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton16MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton16MouseExited(evt);
            }
        });
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                check_inButton(evt);
            }
        });

        modifyInfoButton.setBackground(java.awt.SystemColor.activeCaption);
        modifyInfoButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/meddata/icons/modifypatient.png"))); // NOI18N
        modifyInfoButton.setBorderPainted(false);
        modifyInfoButton.setContentAreaFilled(false);
        modifyInfoButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                modifyInfoButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                modifyInfoButtonMouseExited(evt);
            }
        });
        modifyInfoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifyInfoButtonActionPerformed(evt);
            }
        });

        jButton22.setBackground(java.awt.SystemColor.activeCaption);
        jButton22.setFont(new java.awt.Font("Gulim", 1, 13)); // NOI18N
        jButton22.setIcon(new javax.swing.ImageIcon(getClass().getResource("/meddata/icons/patient history.png"))); // NOI18N
        jButton22.setBorderPainted(false);
        jButton22.setContentAreaFilled(false);
        jButton22.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton22MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton22MouseExited(evt);
            }
        });
        jButton22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patientHistoryDisplayButtonpat(evt);
            }
        });

        jLabel25.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel25.setText("Enter Name or Patient Id");

        jLabel26.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel26.setText("Results:");

        searchField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchFieldActionPerformed(evt);
            }
        });
        searchField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                searchFieldKeyTyped(evt);
            }
        });

        searchResults.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchResultsActionPerformed(evt);
            }
        });

        updateAccountButton.setBackground(java.awt.SystemColor.activeCaption);
        updateAccountButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/meddata/icons/updateaccount.png"))); // NOI18N
        updateAccountButton.setBorderPainted(false);
        updateAccountButton.setContentAreaFilled(false);
        updateAccountButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                updateAccountButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                updateAccountButtonMouseExited(evt);
            }
        });
        updateAccountButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateAccountButtonActionPerformed(evt);
            }
        });

        addAppointmentButton.setBackground(java.awt.SystemColor.activeCaption);
        addAppointmentButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/meddata/icons/addapointment.png"))); // NOI18N
        addAppointmentButton.setBorderPainted(false);
        addAppointmentButton.setContentAreaFilled(false);
        addAppointmentButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                addAppointmentButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                addAppointmentButtonMouseExited(evt);
            }
        });
        addAppointmentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addAppointmentButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout searchPatientPanelLayout = new javax.swing.GroupLayout(searchPatientPanel);
        searchPatientPanel.setLayout(searchPatientPanelLayout);
        searchPatientPanelLayout.setHorizontalGroup(
            searchPatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchPatientPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(searchPatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(searchPatientPanelLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(searchPatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(searchResults, javax.swing.GroupLayout.PREFERRED_SIZE, 485, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(searchPatientPanelLayout.createSequentialGroup()
                                .addGroup(searchPatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(walkInUpdatePopUp, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(searchPatientPanelLayout.createSequentialGroup()
                                        .addComponent(jButton16, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(33, 33, 33)
                                        .addComponent(updateAccountButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 426, Short.MAX_VALUE)
                                .addGroup(searchPatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, searchPatientPanelLayout.createSequentialGroup()
                                        .addComponent(jButton22, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(27, 27, 27)
                                        .addComponent(modifyInfoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(addAppointmentButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jButton14, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jButton15, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(searchpateintPopUp1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap())
        );
        searchPatientPanelLayout.setVerticalGroup(
            searchPatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, searchPatientPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel25)
                .addGap(18, 18, 18)
                .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jLabel26)
                .addGap(27, 27, 27)
                .addComponent(searchResults, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addGroup(searchPatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, searchPatientPanelLayout.createSequentialGroup()
                        .addComponent(searchpateintPopUp1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(searchPatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(modifyInfoButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addAppointmentButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton14, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton15, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton22, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(searchPatientPanelLayout.createSequentialGroup()
                        .addComponent(walkInUpdatePopUp, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(searchPatientPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(updateAccountButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton16, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))))
        );

        displayPanel.add(searchPatientPanel, "card5");

        check_outPanel.setBackground(new java.awt.Color(245, 245, 220));
        check_outPanel.setPreferredSize(new java.awt.Dimension(890, 445));

        jLabel2.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Check-Out");
        jLabel2.setToolTipText("");

        jButton10.setBackground(java.awt.SystemColor.activeCaption);
        jButton10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/meddata/icons/Actions-go-previous-icon.png"))); // NOI18N
        jButton10.setBorderPainted(false);
        jButton10.setContentAreaFilled(false);
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                check_outBackButton(evt);
            }
        });

        jButton13.setBackground(java.awt.SystemColor.activeCaption);
        jButton13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/meddata/icons/print.png"))); // NOI18N
        jButton13.setBorderPainted(false);
        jButton13.setContentAreaFilled(false);
        jButton13.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton13MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton13MouseExited(evt);
            }
        });
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                check_outPrintButton(evt);
            }
        });

        checkOutPatientButton.setBackground(java.awt.SystemColor.activeCaption);
        checkOutPatientButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/meddata/icons/Ok-icon.png"))); // NOI18N
        checkOutPatientButton.setToolTipText("");
        checkOutPatientButton.setBorderPainted(false);
        checkOutPatientButton.setContentAreaFilled(false);
        checkOutPatientButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                checkOutPatientButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                checkOutPatientButtonMouseExited(evt);
            }
        });
        checkOutPatientButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                check_outButton(evt);
            }
        });

        jLabel54.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel54.setText("In-Progress");

        inProgressList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inProgressListActionPerformed(evt);
            }
        });

        checkOutPatientLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        checkOutPatientLabel.setText("Patient:");

        jLabel56.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel56.setText("Diagnosis");

        jLabel57.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel57.setText("Recommendation");

        jLabel58.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel58.setText("Cost");

        diagnosisTextField.setColumns(20);
        diagnosisTextField.setRows(5);
        jScrollPane4.setViewportView(diagnosisTextField);

        recommendationTextField.setColumns(20);
        recommendationTextField.setRows(5);
        jScrollPane5.setViewportView(recommendationTextField);

        javax.swing.GroupLayout check_outPanelLayout = new javax.swing.GroupLayout(check_outPanel);
        check_outPanel.setLayout(check_outPanelLayout);
        check_outPanelLayout.setHorizontalGroup(
            check_outPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(check_outPanelLayout.createSequentialGroup()
                .addGroup(check_outPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(check_outPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(check_outPanelLayout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(check_outPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel54)
                            .addComponent(inProgressList, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(54, 54, 54)
                        .addGroup(check_outPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel57, javax.swing.GroupLayout.PREFERRED_SIZE, 502, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(check_outPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(check_outPanelLayout.createSequentialGroup()
                                    .addGroup(check_outPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(checkOutPatientLabel)
                                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 435, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(check_outPanelLayout.createSequentialGroup()
                                            .addGap(139, 139, 139)
                                            .addComponent(verifyPopUp5, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(check_outPanelLayout.createSequentialGroup()
                                            .addGroup(check_outPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel58, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(costTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGap(24, 24, 24)
                                            .addComponent(checkOutPatientButton, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 434, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(4, 4, 4)
                                    .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(33, 33, 33)
                                    .addGroup(check_outPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(printPopUp6, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addComponent(jLabel56, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 576, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        check_outPanelLayout.setVerticalGroup(
            check_outPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(check_outPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(check_outPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel54)
                    .addComponent(checkOutPatientLabel))
                .addGap(29, 29, 29)
                .addGroup(check_outPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(inProgressList, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(check_outPanelLayout.createSequentialGroup()
                        .addComponent(jLabel56)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(check_outPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, check_outPanelLayout.createSequentialGroup()
                                .addComponent(jLabel57)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(check_outPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(check_outPanelLayout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel58))
                                    .addGroup(check_outPanelLayout.createSequentialGroup()
                                        .addGap(31, 31, 31)
                                        .addComponent(printPopUp6, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(verifyPopUp5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(check_outPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(checkOutPatientButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(check_outPanelLayout.createSequentialGroup()
                                .addComponent(costTextField)
                                .addGap(12, 12, 12)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        displayPanel.add(check_outPanel, "card3");

        calendarPanel.setBackground(new java.awt.Color(245, 245, 220));
        calendarPanel.setPreferredSize(new java.awt.Dimension(890, 445));

        jLabel3.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Feburary");
        jLabel3.setToolTipText("");

        viewAppointmentCalendar1.addSelectionChangedListener(new datechooser.events.SelectionChangedListener() {
            public void onSelectionChange(datechooser.events.SelectionChangedEvent evt) {
                viewAppointmentCalendar1OnSelectionChange(evt);
            }
        });

        javax.swing.GroupLayout calendarPanelLayout = new javax.swing.GroupLayout(calendarPanel);
        calendarPanel.setLayout(calendarPanelLayout);
        calendarPanelLayout.setHorizontalGroup(
            calendarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(calendarPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(806, Short.MAX_VALUE))
            .addGroup(calendarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(calendarPanelLayout.createSequentialGroup()
                    .addGap(29, 29, 29)
                    .addComponent(viewAppointmentCalendar1, javax.swing.GroupLayout.PREFERRED_SIZE, 862, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        calendarPanelLayout.setVerticalGroup(
            calendarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(calendarPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(379, Short.MAX_VALUE))
            .addGroup(calendarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(calendarPanelLayout.createSequentialGroup()
                    .addGap(63, 63, 63)
                    .addComponent(viewAppointmentCalendar1, javax.swing.GroupLayout.PREFERRED_SIZE, 347, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(33, Short.MAX_VALUE)))
        );

        displayPanel.add(calendarPanel, "card4");

        searchAppointmentPanel.setBackground(new java.awt.Color(245, 245, 220));
        searchAppointmentPanel.setPreferredSize(new java.awt.Dimension(890, 445));

        jLabel5.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Search Appointment");
        jLabel5.setToolTipText("");

        jButton18.setBackground(java.awt.SystemColor.activeCaption);
        jButton18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/meddata/icons/addpatient.png"))); // NOI18N
        jButton18.setBorderPainted(false);
        jButton18.setContentAreaFilled(false);
        jButton18.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton18MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton18MouseExited(evt);
            }
        });
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addAppointmentPanelButton(evt);
            }
        });

        jButton21.setBackground(java.awt.SystemColor.activeCaption);
        jButton21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/meddata/icons/Actions-go-previous-icon.png"))); // NOI18N
        jButton21.setBorderPainted(false);
        jButton21.setContentAreaFilled(false);
        jButton21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchAppointmentBackButton(evt);
            }
        });

        jLabel49.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel49.setText("Name:");

        findAppointmentNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findAppointmentNameFieldActionPerformed(evt);
            }
        });
        findAppointmentNameField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                findAppointmentNameFieldKeyTyped(evt);
            }
        });

        findAppointmentResultList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findAppointmentResultListActionPerformed(evt);
            }
        });

        jLabel50.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel50.setText("Results:");

        findAppointmentName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        findAppointmentName.setText("Name:");

        findAppointmentContact.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        findAppointmentContact.setText("Contact:");

        findAppointmentDateTime.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        findAppointmentDateTime.setText("Date/Time:");

        viewAppointmentDoctor1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        viewAppointmentDoctor1.setText("Doctor:");

        viewAppointmentReason1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        viewAppointmentReason1.setText("Reason:");

        findAppointmentModifyButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/meddata/icons/edit-file-icon.png"))); // NOI18N
        findAppointmentModifyButton.setBorderPainted(false);
        findAppointmentModifyButton.setContentAreaFilled(false);
        findAppointmentModifyButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                findAppointmentModifyButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                findAppointmentModifyButtonMouseExited(evt);
            }
        });
        findAppointmentModifyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findAppointmentModifyButtonActionPerformed(evt);
            }
        });

        findAppointmentDeleteButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/meddata/icons/delete.png"))); // NOI18N
        findAppointmentDeleteButton.setBorderPainted(false);
        findAppointmentDeleteButton.setContentAreaFilled(false);
        findAppointmentDeleteButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                findAppointmentDeleteButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                findAppointmentDeleteButtonMouseExited(evt);
            }
        });
        findAppointmentDeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findAppointmentDeleteButtonActionPerformed(evt);
            }
        });

        jButton19.setBackground(java.awt.SystemColor.activeCaption);
        jButton19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/meddata/icons/searchpatient.png"))); // NOI18N
        jButton19.setBorderPainted(false);
        jButton19.setContentAreaFilled(false);
        jButton19.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton19MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton19MouseExited(evt);
            }
        });
        jButton19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton19addAppointmentPanelButton(evt);
            }
        });

        javax.swing.GroupLayout searchAppointmentPanelLayout = new javax.swing.GroupLayout(searchAppointmentPanel);
        searchAppointmentPanel.setLayout(searchAppointmentPanelLayout);
        searchAppointmentPanelLayout.setHorizontalGroup(
            searchAppointmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchAppointmentPanelLayout.createSequentialGroup()
                .addGroup(searchAppointmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(searchAppointmentPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(searchAppointmentPanelLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel49))
                    .addGroup(searchAppointmentPanelLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(searchAppointmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel50)
                            .addComponent(findAppointmentNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(searchAppointmentPanelLayout.createSequentialGroup()
                                .addComponent(findAppointmentResultList, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(42, 42, 42)
                                .addGroup(searchAppointmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(searchAppointmentPanelLayout.createSequentialGroup()
                                        .addGap(124, 124, 124)
                                        .addGroup(searchAppointmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(searchAppointmentPanelLayout.createSequentialGroup()
                                                .addComponent(findAppointmentDeleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(removePopUp6, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(searchAppointmentPanelLayout.createSequentialGroup()
                                                .addComponent(findAppointmentModifyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(modifyPopUp7, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(searchAppointmentPanelLayout.createSequentialGroup()
                                        .addGroup(searchAppointmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(findAppointmentDateTime)
                                            .addComponent(viewAppointmentDoctor1)
                                            .addComponent(viewAppointmentReason1)
                                            .addComponent(findAppointmentContact)
                                            .addComponent(findAppointmentName))
                                        .addGap(508, 508, 508)))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, searchAppointmentPanelLayout.createSequentialGroup()
                .addGroup(searchAppointmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(searchAppointmentPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(searchAppointmentPopUpLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(searchAppointmentPanelLayout.createSequentialGroup()
                        .addGap(719, 719, 719)
                        .addComponent(jButton19, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)
                        .addComponent(jButton18, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(jButton21, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(29, 29, 29))
        );
        searchAppointmentPanelLayout.setVerticalGroup(
            searchAppointmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, searchAppointmentPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(searchAppointmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(searchAppointmentPanelLayout.createSequentialGroup()
                        .addGap(159, 159, 159)
                        .addGroup(searchAppointmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(searchAppointmentPanelLayout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(findAppointmentName)
                                .addGap(27, 27, 27)
                                .addComponent(findAppointmentContact))
                            .addComponent(findAppointmentModifyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, searchAppointmentPanelLayout.createSequentialGroup()
                                .addComponent(modifyPopUp7, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(36, 36, 36)))
                        .addGroup(searchAppointmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(searchAppointmentPanelLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(removePopUp6, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(106, 106, 106)
                                .addComponent(searchAppointmentPopUpLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(searchAppointmentPanelLayout.createSequentialGroup()
                                .addGroup(searchAppointmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(searchAppointmentPanelLayout.createSequentialGroup()
                                        .addGap(25, 25, 25)
                                        .addComponent(findAppointmentDateTime)
                                        .addGap(24, 24, 24)
                                        .addComponent(viewAppointmentDoctor1)
                                        .addGap(18, 18, 18)
                                        .addComponent(viewAppointmentReason1))
                                    .addComponent(findAppointmentDeleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGroup(searchAppointmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton21, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton18, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton19, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(155, 155, 155))
                    .addGroup(searchAppointmentPanelLayout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel49)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(findAppointmentNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel50)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(findAppointmentResultList, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(204, 204, 204))))
        );

        displayPanel.add(searchAppointmentPanel, "card6");

        patientHistoryPanel.setBackground(new java.awt.Color(245, 245, 220));
        patientHistoryPanel.setPreferredSize(new java.awt.Dimension(890, 445));

        jLabel9.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Patient History");
        jLabel9.setToolTipText("");

        jButton23.setBackground(java.awt.SystemColor.activeCaption);
        jButton23.setIcon(new javax.swing.ImageIcon(getClass().getResource("/meddata/icons/print.png"))); // NOI18N
        jButton23.setBorderPainted(false);
        jButton23.setContentAreaFilled(false);
        jButton23.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton23MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton23MouseExited(evt);
            }
        });
        jButton23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patientHistoryPrintButton(evt);
            }
        });

        jButton24.setBackground(java.awt.SystemColor.activeCaption);
        jButton24.setIcon(new javax.swing.ImageIcon(getClass().getResource("/meddata/icons/Actions-go-previous-icon.png"))); // NOI18N
        jButton24.setBorderPainted(false);
        jButton24.setContentAreaFilled(false);
        jButton24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patientHistoryBackButton(evt);
            }
        });

        historyPatientName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        historyPatientName.setText("First Name");

        historyDoneButton.setBackground(java.awt.SystemColor.activeCaption);
        historyDoneButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/meddata/icons/Ok-icon.png"))); // NOI18N
        historyDoneButton.setBorderPainted(false);
        historyDoneButton.setContentAreaFilled(false);
        historyDoneButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                historyDoneButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                historyDoneButtonMouseExited(evt);
            }
        });
        historyDoneButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                historyDoneButtonpatientHistoryPrintButton(evt);
            }
        });

        historyDisplayButton.setBackground(java.awt.SystemColor.activeCaption);
        historyDisplayButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/meddata/icons/displayhistory.png"))); // NOI18N
        historyDisplayButton.setBorderPainted(false);
        historyDisplayButton.setContentAreaFilled(false);
        historyDisplayButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                historyDisplayButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                historyDisplayButtonMouseExited(evt);
            }
        });
        historyDisplayButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                historyDisplayButtonpatientHistoryPrintButton(evt);
            }
        });

        javax.swing.GroupLayout patientHistoryPanelLayout = new javax.swing.GroupLayout(patientHistoryPanel);
        patientHistoryPanel.setLayout(patientHistoryPanelLayout);
        patientHistoryPanelLayout.setHorizontalGroup(
            patientHistoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(patientHistoryPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(patientHistoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(patientHistoryPanelLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(patientHistoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(historyPatientName, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(patientHistoryPanelLayout.createSequentialGroup()
                                .addComponent(historyVisitList, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(63, 63, 63)
                                .addGroup(patientHistoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(historyDisplayButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(historyDoneButton, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(patientHistoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(verifyPopUp6, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(showHistoryPopUp, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(317, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, patientHistoryPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(patientHistoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(printpathistoryPopUp, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(patientHistoryPanelLayout.createSequentialGroup()
                        .addComponent(jButton23, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton24, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        patientHistoryPanelLayout.setVerticalGroup(
            patientHistoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, patientHistoryPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(patientHistoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(patientHistoryPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(printpathistoryPopUp, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton23, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(patientHistoryPanelLayout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(historyPatientName)
                        .addGap(25, 25, 25)
                        .addGroup(patientHistoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(patientHistoryPanelLayout.createSequentialGroup()
                                .addGroup(patientHistoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(historyDisplayButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(patientHistoryPanelLayout.createSequentialGroup()
                                        .addGap(12, 12, 12)
                                        .addComponent(showHistoryPopUp, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(patientHistoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(patientHistoryPanelLayout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(historyDoneButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(patientHistoryPanelLayout.createSequentialGroup()
                                        .addGap(27, 27, 27)
                                        .addComponent(verifyPopUp6, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(historyVisitList, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                        .addComponent(jButton24, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        displayPanel.add(patientHistoryPanel, "card8");

        addAppointmentPanel.setBackground(new java.awt.Color(245, 245, 220));
        addAppointmentPanel.setPreferredSize(new java.awt.Dimension(890, 445));

        jLabel11.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Add Appointment");
        jLabel11.setToolTipText("");

        jButton31.setBackground(java.awt.SystemColor.activeCaption);
        jButton31.setIcon(new javax.swing.ImageIcon(getClass().getResource("/meddata/icons/Actions-go-previous-icon.png"))); // NOI18N
        jButton31.setBorderPainted(false);
        jButton31.setContentAreaFilled(false);
        jButton31.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addAppointmentBackButton(evt);
            }
        });

        jButton32.setBackground(java.awt.SystemColor.activeCaption);
        jButton32.setIcon(new javax.swing.ImageIcon(getClass().getResource("/meddata/icons/Actions-list-add-icon.png"))); // NOI18N
        jButton32.setToolTipText("");
        jButton32.setBorderPainted(false);
        jButton32.setContentAreaFilled(false);
        jButton32.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton32MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton32MouseExited(evt);
            }
        });
        jButton32.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addAppointmentButton(evt);
            }
        });

        appointmentPatientName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        appointmentPatientName.setText("jLabel31");

        jLabel45.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel45.setText("Reason For Visit");

        jLabel46.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel46.setText("Doctor");

        dateChooserPanel1.setNavigateFont(new java.awt.Font("Serif", java.awt.Font.PLAIN, 11));
        dateChooserPanel1.addSelectionChangedListener(new datechooser.events.SelectionChangedListener() {
            public void onSelectionChange(datechooser.events.SelectionChangedEvent evt) {
                dateChooserPanel1OnSelectionChange(evt);
            }
        });
        dateChooserPanel1.addCommitListener(new datechooser.events.CommitListener() {
            public void onCommit(datechooser.events.CommitEvent evt) {
                dateChooserPanel1OnCommit(evt);
            }
        });

        availableTimesList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                availableTimesListActionPerformed(evt);
            }
        });

        jLabel47.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel47.setText("Available Times:");

        addPatientCancelButton1.setBackground(java.awt.SystemColor.activeCaption);
        addPatientCancelButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/meddata/icons/newclose.png"))); // NOI18N
        addPatientCancelButton1.setBorderPainted(false);
        addPatientCancelButton1.setContentAreaFilled(false);
        addPatientCancelButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                addPatientCancelButton1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                addPatientCancelButton1MouseExited(evt);
            }
        });
        addPatientCancelButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPatientCancelButton1addPatientButton(evt);
            }
        });

        javax.swing.GroupLayout addAppointmentPanelLayout = new javax.swing.GroupLayout(addAppointmentPanel);
        addAppointmentPanel.setLayout(addAppointmentPanelLayout);
        addAppointmentPanelLayout.setHorizontalGroup(
            addAppointmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addAppointmentPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addAppointmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(addAppointmentPanelLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(addAppointmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(dateChooserPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 443, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(addAppointmentPanelLayout.createSequentialGroup()
                                .addComponent(jLabel45)
                                .addGap(18, 18, 18)
                                .addComponent(reasonForVisitField))
                            .addComponent(appointmentPatientName, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(addAppointmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(addAppointmentPanelLayout.createSequentialGroup()
                        .addGroup(addAppointmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(addAppointmentPanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(appointmentDoctorList, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(addAppointmentPanelLayout.createSequentialGroup()
                                .addGap(66, 66, 66)
                                .addComponent(jLabel46)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 78, Short.MAX_VALUE)
                        .addGroup(addAppointmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel47)
                            .addComponent(availableTimesList, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24))
                    .addGroup(addAppointmentPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(addAppointmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addapointmentPopUp, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(addAppointmentPanelLayout.createSequentialGroup()
                                .addComponent(jButton32, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(addPatientCancelButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton31, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())))
        );
        addAppointmentPanelLayout.setVerticalGroup(
            addAppointmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addAppointmentPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(appointmentPatientName, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addAppointmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addAppointmentPanelLayout.createSequentialGroup()
                        .addGroup(addAppointmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel45)
                            .addComponent(reasonForVisitField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel47, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(addAppointmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dateChooserPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(addAppointmentPanelLayout.createSequentialGroup()
                                .addGroup(addAppointmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(appointmentDoctorList, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(availableTimesList, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(addapointmentPopUp, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(addAppointmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addPatientCancelButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton32, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton31, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(182, 182, 182))
                    .addGroup(addAppointmentPanelLayout.createSequentialGroup()
                        .addComponent(jLabel46)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        displayPanel.add(addAppointmentPanel, "card11");

        viewAppointmentPanel.setBackground(new java.awt.Color(245, 245, 220));
        viewAppointmentPanel.setPreferredSize(new java.awt.Dimension(890, 445));

        jLabel48.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel48.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel48.setText("View Appointments");
        jLabel48.setToolTipText("");

        jButton33.setBackground(java.awt.SystemColor.activeCaption);
        jButton33.setIcon(new javax.swing.ImageIcon(getClass().getResource("/meddata/icons/Actions-go-previous-icon.png"))); // NOI18N
        jButton33.setBorderPainted(false);
        jButton33.setContentAreaFilled(false);
        jButton33.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton33addAppointmentBackButton(evt);
            }
        });

        viewAppointmentCalendar.addSelectionChangedListener(new datechooser.events.SelectionChangedListener() {
            public void onSelectionChange(datechooser.events.SelectionChangedEvent evt) {
                viewAppointmentCalendarOnSelectionChange(evt);
            }
        });

        viewAppointmentList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewAppointmentListActionPerformed(evt);
            }
        });

        viewAppointmentName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        viewAppointmentName.setText("Name:");

        viewAppointmentContact.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        viewAppointmentContact.setText("Contact:");

        viewAppointmentDoctor.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        viewAppointmentDoctor.setText("Doctor:");

        viewAppointmentReason.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        viewAppointmentReason.setText("Reason:");

        viewAppointmentsModifyButton.setBackground(java.awt.SystemColor.activeCaption);
        viewAppointmentsModifyButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/meddata/icons/edit-file-icon.png"))); // NOI18N
        viewAppointmentsModifyButton.setBorderPainted(false);
        viewAppointmentsModifyButton.setContentAreaFilled(false);
        viewAppointmentsModifyButton.setPreferredSize(new java.awt.Dimension(55, 23));
        viewAppointmentsModifyButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                viewAppointmentsModifyButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                viewAppointmentsModifyButtonMouseExited(evt);
            }
        });
        viewAppointmentsModifyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewAppointmentsModifyButtonActionPerformed(evt);
            }
        });

        viewAppointmentsDelteButton.setBackground(java.awt.SystemColor.activeCaption);
        viewAppointmentsDelteButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/meddata/icons/delete.png"))); // NOI18N
        viewAppointmentsDelteButton.setBorderPainted(false);
        viewAppointmentsDelteButton.setContentAreaFilled(false);
        viewAppointmentsDelteButton.setPreferredSize(new java.awt.Dimension(55, 23));
        viewAppointmentsDelteButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                viewAppointmentsDelteButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                viewAppointmentsDelteButtonMouseExited(evt);
            }
        });
        viewAppointmentsDelteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewAppointmentsDelteButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout viewAppointmentPanelLayout = new javax.swing.GroupLayout(viewAppointmentPanel);
        viewAppointmentPanel.setLayout(viewAppointmentPanelLayout);
        viewAppointmentPanelLayout.setHorizontalGroup(
            viewAppointmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewAppointmentPanelLayout.createSequentialGroup()
                .addComponent(jLabel48, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(viewAppointmentPanelLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(viewAppointmentCalendar, javax.swing.GroupLayout.PREFERRED_SIZE, 477, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(viewAppointmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(viewAppointmentPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(viewAppointmentList, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(viewAppointmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(viewAppointmentName)
                            .addComponent(viewAppointmentContact)
                            .addComponent(viewAppointmentDoctor)
                            .addComponent(viewAppointmentReason)))
                    .addGroup(viewAppointmentPanelLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(viewAppointmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(viewAppointmentPanelLayout.createSequentialGroup()
                                .addComponent(viewAppointmentsDelteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cancelPopUp7, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(viewAppointmentPanelLayout.createSequentialGroup()
                                .addComponent(viewAppointmentsModifyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel64, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(68, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, viewAppointmentPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton33, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        viewAppointmentPanelLayout.setVerticalGroup(
            viewAppointmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewAppointmentPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel48, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(viewAppointmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(viewAppointmentPanelLayout.createSequentialGroup()
                        .addComponent(viewAppointmentList, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(viewAppointmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(viewAppointmentPanelLayout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addComponent(viewAppointmentsModifyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(viewAppointmentPanelLayout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addComponent(jLabel64, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(viewAppointmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(viewAppointmentPanelLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(viewAppointmentsDelteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(viewAppointmentPanelLayout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(cancelPopUp7, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(viewAppointmentPanelLayout.createSequentialGroup()
                        .addGroup(viewAppointmentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(viewAppointmentCalendar, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(viewAppointmentPanelLayout.createSequentialGroup()
                                .addComponent(viewAppointmentName)
                                .addGap(18, 18, 18)
                                .addComponent(viewAppointmentContact)
                                .addGap(18, 18, 18)
                                .addComponent(viewAppointmentDoctor)
                                .addGap(18, 18, 18)
                                .addComponent(viewAppointmentReason)))
                        .addGap(43, 43, 43)
                        .addComponent(jButton33, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        displayPanel.add(viewAppointmentPanel, "card40");

        configurePanel.setBackground(new java.awt.Color(245, 245, 220));
        configurePanel.setPreferredSize(new java.awt.Dimension(890, 445));

        jLabel51.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel51.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel51.setText("Configure");
        jLabel51.setToolTipText("");

        jButton17.setBackground(java.awt.SystemColor.activeCaption);
        jButton17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/meddata/icons/Actions-go-previous-icon.png"))); // NOI18N
        jButton17.setBorderPainted(false);
        jButton17.setContentAreaFilled(false);
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17addPatientBackButton(evt);
            }
        });

        jLabel52.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel52.setText("Doctors:");

        doctorList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doctorListActionPerformed(evt);
            }
        });

        removeDoctorButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/meddata/icons/delete.png"))); // NOI18N
        removeDoctorButton.setBorderPainted(false);
        removeDoctorButton.setContentAreaFilled(false);
        removeDoctorButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                removeDoctorButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                removeDoctorButtonMouseExited(evt);
            }
        });
        removeDoctorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeDoctorButtonActionPerformed(evt);
            }
        });

        addDoctorField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addDoctorFieldActionPerformed(evt);
            }
        });

        addDoctorButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/meddata/icons/Actions-list-add-icon.png"))); // NOI18N
        addDoctorButton.setBorderPainted(false);
        addDoctorButton.setContentAreaFilled(false);
        addDoctorButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addDoctorButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                addDoctorButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                addDoctorButtonMouseExited(evt);
            }
        });
        addDoctorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addDoctorButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout configurePanelLayout = new javax.swing.GroupLayout(configurePanel);
        configurePanel.setLayout(configurePanelLayout);
        configurePanelLayout.setHorizontalGroup(
            configurePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(configurePanelLayout.createSequentialGroup()
                .addGroup(configurePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(configurePanelLayout.createSequentialGroup()
                        .addGroup(configurePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(configurePanelLayout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addGroup(configurePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel52)
                                    .addComponent(doctorList, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(32, 32, 32)
                                .addGroup(configurePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(addDoctorField, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(configurePanelLayout.createSequentialGroup()
                                        .addComponent(removeDoctorButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel63, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(configurePanelLayout.createSequentialGroup()
                                        .addComponent(addDoctorButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel62, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(configurePanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel51, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 520, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, configurePanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton17, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        configurePanelLayout.setVerticalGroup(
            configurePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(configurePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel51, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel52)
                .addGroup(configurePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(configurePanelLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(doctorList, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(configurePanelLayout.createSequentialGroup()
                        .addGroup(configurePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(configurePanelLayout.createSequentialGroup()
                                .addGap(156, 156, 156)
                                .addComponent(removeDoctorButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, configurePanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel63, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(32, 32, 32)))
                        .addComponent(addDoctorField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(configurePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(configurePanelLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(addDoctorButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(configurePanelLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel62, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addComponent(jButton17, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        displayPanel.add(configurePanel, "card50");

        datePanel.setBackground(new java.awt.Color(119, 138, 153));
        datePanel.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        datePanel.setPreferredSize(new java.awt.Dimension(604, 79));

        javax.swing.GroupLayout datePanelLayout = new javax.swing.GroupLayout(datePanel);
        datePanel.setLayout(datePanelLayout);
        datePanelLayout.setHorizontalGroup(
            datePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(datePanelLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(dateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(381, Short.MAX_VALUE))
        );
        datePanelLayout.setVerticalGroup(
            datePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, datePanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(dateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        actionPanel.setBackground(new java.awt.Color(119, 138, 153));
        actionPanel.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));

        actionsLabel.setFont(new java.awt.Font("Lucida Console", 0, 11)); // NOI18N

        javax.swing.GroupLayout actionPanelLayout = new javax.swing.GroupLayout(actionPanel);
        actionPanel.setLayout(actionPanelLayout);
        actionPanelLayout.setHorizontalGroup(
            actionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(actionsLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        actionPanelLayout.setVerticalGroup(
            actionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, actionPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(actionsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        logoPanel.setBackground(new java.awt.Color(119, 138, 153));
        logoPanel.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        logoPanel.setPreferredSize(new java.awt.Dimension(152, 79));

        jLabel53.setFont(new java.awt.Font("Consolas", 0, 48)); // NOI18N
        jLabel53.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel53.setText("PMS");

        javax.swing.GroupLayout logoPanelLayout = new javax.swing.GroupLayout(logoPanel);
        logoPanel.setLayout(logoPanelLayout);
        logoPanelLayout.setHorizontalGroup(
            logoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(logoPanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel53, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(17, Short.MAX_VALUE))
        );
        logoPanelLayout.setVerticalGroup(
            logoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, logoPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel53)
                .addContainerGap())
        );

        buttonPanel.setBackground(new java.awt.Color(112, 128, 144));
        buttonPanel.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));

        jButton6.setBackground(java.awt.SystemColor.activeCaption);
        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/meddata/icons/addpatient.png"))); // NOI18N
        jButton6.setToolTipText("");
        jButton6.setBorderPainted(false);
        jButton6.setContentAreaFilled(false);
        jButton6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton6MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton6MouseExited(evt);
            }
        });
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPatientPanelButton(evt);
            }
        });

        jButton1.setBackground(java.awt.SystemColor.activeCaption);
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/meddata/icons/checkoutnew.png"))); // NOI18N
        jButton1.setBorderPainted(false);
        jButton1.setContentAreaFilled(false);
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton1MouseExited(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                check_OutPanelButton(evt);
            }
        });

        jButton5.setBackground(java.awt.SystemColor.activeCaption);
        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/meddata/icons/searchpatient.png"))); // NOI18N
        jButton5.setBorderPainted(false);
        jButton5.setContentAreaFilled(false);
        jButton5.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jButton5MouseDragged(evt);
            }
        });
        jButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton5MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton5MouseExited(evt);
            }
        });
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchPatientButton(evt);
            }
        });

        jButton4.setBackground(java.awt.SystemColor.activeCaption);
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/meddata/icons/searchappointment.png"))); // NOI18N
        jButton4.setBorderPainted(false);
        jButton4.setContentAreaFilled(false);
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton4MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton4MouseExited(evt);
            }
        });
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchAppointmentButton(evt);
            }
        });

        jButton2.setBackground(java.awt.SystemColor.activeCaption);
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/meddata/icons/calendar.png"))); // NOI18N
        jButton2.setBorderPainted(false);
        jButton2.setContentAreaFilled(false);
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton2MouseExited(evt);
            }
        });
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calendarButton(evt);
            }
        });

        jButton3.setBackground(java.awt.SystemColor.activeCaption);
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/meddata/icons/1-Normal-Home-icon.png"))); // NOI18N
        jButton3.setBorderPainted(false);
        jButton3.setContentAreaFilled(false);
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton3MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton3MouseExited(evt);
            }
        });
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainDisplayButton(evt);
            }
        });

        addButtonPopUp.setText("  Add Patient");

        checkoutPopUp2.setText("   Check out");

        addAppointtPopUp3.setText("     Search Appointment");

        calendarPopUp3.setText("    Calendar");

        mainpopUp4.setText("      Home");

        addButtonPopUp1.setText("     Search Patient");
        addButtonPopUp1.setPreferredSize(new java.awt.Dimension(85, 18));

        javax.swing.GroupLayout buttonPanelLayout = new javax.swing.GroupLayout(buttonPanel);
        buttonPanel.setLayout(buttonPanelLayout);
        buttonPanelLayout.setHorizontalGroup(
            buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonPanelLayout.createSequentialGroup()
                .addGroup(buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(buttonPanelLayout.createSequentialGroup()
                        .addGroup(buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(calendarPopUp3, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(checkoutPopUp2, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(buttonPanelLayout.createSequentialGroup()
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addButtonPopUp, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(buttonPanelLayout.createSequentialGroup()
                        .addGroup(buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addAppointtPopUp3, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addButtonPopUp1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(buttonPanelLayout.createSequentialGroup()
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mainpopUp4, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        buttonPanelLayout.setVerticalGroup(
            buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonPanelLayout.createSequentialGroup()
                .addGroup(buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(buttonPanelLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(addButtonPopUp, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton5)
                    .addGroup(buttonPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(addButtonPopUp1, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(buttonPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton4))
                    .addGroup(buttonPanelLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(checkoutPopUp2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(buttonPanelLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(addAppointtPopUp3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(buttonPanelLayout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(calendarPopUp3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(buttonPanelLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(buttonPanelLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(mainpopUp4, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(buttonPanelLayout.createSequentialGroup()
                .addComponent(jButton6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(currentTaskPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 445, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(reminderTab, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(dayPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(datePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 457, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(actionPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(displayPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 927, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(extraRightPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(logoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(clockPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(buttonPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(clockPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE)
                    .addComponent(dayPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE)
                    .addComponent(datePanel, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE)
                    .addComponent(actionPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(logoPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE))
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(displayPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(reminderTab, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(currentTaskPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(extraRightPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 451, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addPatientPanelButton(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPatientPanelButton
        // TODO add your handling code here:
        CardLayout card = (CardLayout) displayPanel.getLayout();
        card.show(displayPanel, "card2");
        CardLayout card4 = (CardLayout) currentTaskPanel.getLayout();
        card4.show(currentTaskPanel, "card90");
        tempBackButton = 0;
        tempAddBackButton = 0;
        
    }//GEN-LAST:event_addPatientPanelButton

    private void check_OutPanelButton(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_check_OutPanelButton
        // TODO add your handling code here:
        CardLayout card = (CardLayout) displayPanel.getLayout();
        card.show(displayPanel, "card3");
        CardLayout card4 = (CardLayout) currentTaskPanel.getLayout();
        card4.show(currentTaskPanel, "card90");
        tempBackButton = 0;
        tempAddBackButton = 0;
        updateTodaysAppointments();
        
    }//GEN-LAST:event_check_OutPanelButton

    private void calendarButton(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calendarButton
        // TODO add your handling code here:
        CardLayout card = (CardLayout) displayPanel.getLayout();
        card.show(displayPanel, "card4");
        CardLayout card4 = (CardLayout) currentTaskPanel.getLayout();
        card4.show(currentTaskPanel, "card91");
        tempBackButton = 0;
        tempAddBackButton = 0;
        
    }//GEN-LAST:event_calendarButton

    private void searchPatientButton(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchPatientButton
        // TODO add your handling code here:
        CardLayout card = (CardLayout) displayPanel.getLayout();
        card.show(displayPanel, "card5");
        CardLayout card4 = (CardLayout) currentTaskPanel.getLayout();
        card4.show(currentTaskPanel, "card90");
        tempBackButton = 2;
        tempAddBackButton = 0;
        
    }//GEN-LAST:event_searchPatientButton

    private void searchAppointmentButton(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchAppointmentButton
        // TODO add your handling code here:
        CardLayout card = (CardLayout) displayPanel.getLayout();
        card.show(displayPanel, "card6");
        CardLayout card4 = (CardLayout) currentTaskPanel.getLayout();
        card4.show(currentTaskPanel, "card90");
        tempBackButton = 3;
        tempAddBackButton = 0;
        
    }//GEN-LAST:event_searchAppointmentButton

    private void mainDisplayButton(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainDisplayButton
        // TODO add your handling code here:
        CardLayout card = (CardLayout) displayPanel.getLayout();
        card.show(displayPanel, "card7");
        CardLayout card4 = (CardLayout) currentTaskPanel.getLayout();
        card4.show(currentTaskPanel, "card92");
        tempBackButton = 0;
        tempAddBackButton = 0;
        
    }//GEN-LAST:event_mainDisplayButton

    private void searchAppointmentBackButton(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchAppointmentBackButton
        // TODO add your handling code here:
        CardLayout card = (CardLayout) displayPanel.getLayout();
        card.show(displayPanel, "card7");
        
    }//GEN-LAST:event_searchAppointmentBackButton

    private void check_outBackButton(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_check_outBackButton
        // TODO add your handling code here:
        CardLayout card = (CardLayout) displayPanel.getLayout();
        card.show(displayPanel, "card7");
    }//GEN-LAST:event_check_outBackButton

    private void check_outPrintButton(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_check_outPrintButton
        // TODO add your handling code here:
    }//GEN-LAST:event_check_outPrintButton

    private void check_outButton(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_check_outButton
        // TODO add your handling code here:
           if (inProgressList.getSelectedIndex() == -1) {
            JOptionPane.showMessageDialog(rootPane, "Patient not selected");
            return;
        }
        if (diagnosisTextField.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Form Incomplete, Enter Diagnosis");
            return;
        }
        if (recommendationTextField.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Form Incomplete, Enter Recommendation");
            return;
        }
        if (costTextField.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Form Incomplete, Enter Cost");
            return;
        }
        double cost = -1;
        try {
            cost = Double.parseDouble(costTextField.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, "Invalid cost entry");
            return;
        }
        Visit v = data.getCheckedIn().get(inProgressList.getSelectedIndex());
        data.checkOut(v);
        Patient p = data.getPatientByID(v.getPatientID());
        v.setCause(diagnosisTextField.getText());
        v.setCorrection(recommendationTextField.getText());
        v.setCost(cost);
        v.setCoPay(p.getCoPay());
        if (cost > p.getCoPay()) {
            p.setBalance(p.getBalance() + p.getCoPay());
        } else {
            p.setBalance(p.getBalance() + cost);
        }
        p.addVisit(v);
        currentPatient = p;
        accountHoldersName.setText(currentPatient.getFirstName() + " " + currentPatient.getLastName());
        deletedpatientNameArray[z3] = currentPatient.getFirstName() + " " + currentPatient.getLastName();
        z3++;
        currentBalance.setText("$" + currentPatient.getBalance());
        amountInput.setText("" + currentPatient.getBalance());
        diagnosisTextField.setText("");
        recommendationTextField.setText("");
        costTextField.setText("");
        updateTodaysAppointments();
        reminderPanel.setVisible(false);
        updateAccountFrame.setVisible(true);
    }//GEN-LAST:event_check_outButton

    private void addAppointmentPanelButton(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addAppointmentPanelButton
        // TODO add your handling code here:
        CardLayout card = (CardLayout) displayPanel.getLayout();
        card.show(displayPanel, "card2");
    }//GEN-LAST:event_addAppointmentPanelButton

    private void addPatientBackButton(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPatientBackButton
        // TODO add your handling code here:
        if (tempBackButton == 2) {
        CardLayout card = (CardLayout) displayPanel.getLayout();
        card.show(displayPanel, "card5");
        } else if(tempBackButton == 3 && tempAddBackButton != 4) {
        CardLayout card = (CardLayout) displayPanel.getLayout();
        card.show(displayPanel, "card6");
        } else if(tempBackButton == 3 && tempAddBackButton == 4) {
        CardLayout card = (CardLayout) displayPanel.getLayout();
        card.show(displayPanel, "card5");
        } else {
        CardLayout card = (CardLayout) displayPanel.getLayout();
        card.show(displayPanel, "card7");
        }
        tempAddBackButton = 0;
    }//GEN-LAST:event_addPatientBackButton

    private void femaleCheckBox(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_femaleCheckBox
        // TODO add your handling code here:
        if (male.isSelected()) {
            male.setSelected(false);
        }
        female.setSelected(true);
    }//GEN-LAST:event_femaleCheckBox

    private void addPatientButton(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPatientButton
        // TODO add your handling code here:
      double coPay;

        try {
            coPay = Double.parseDouble(insuranceCoPay.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, "Invalid CoPay entry. Number required");
            return;
        }
        if (firstName.getText().length() == 0) {
            JOptionPane.showMessageDialog(rootPane, "Form Incomplete");
            return;
        }
        if (lastName.getText().length() == 0) {
            JOptionPane.showMessageDialog(rootPane, "Form Incomplete");
            return;
        }
        if (insuranceName.getText().length() == 0) {
            JOptionPane.showMessageDialog(rootPane, "Form Incomplete");
            return;
        }
        if (address.getText().length() == 0) {
            JOptionPane.showMessageDialog(rootPane, "Form Incomplete");
            return;
        }
        if (telephoneNumber.getText().length() == 0) {
            JOptionPane.showMessageDialog(rootPane, "Form Incomplete");
            return;
        }
        if (emergencyContact.getText().length() == 0) {
            JOptionPane.showMessageDialog(rootPane, "Form Incomplete");
            return;
        }
        if (medicalBackground.getText().length() == 0) {
            JOptionPane.showMessageDialog(rootPane, "Form Incomplete");
            return;
        }
        if (socialSecurityNumber.getText().length() == 0) {
            JOptionPane.showMessageDialog(rootPane, "Form Incomplete");
            return;
        }
        if (eMailAddress.getText().length() == 0) {
            JOptionPane.showMessageDialog(rootPane, "Form Incomplete");
            return;
        }

        actionSwitch = 3;
        Patient p = new Patient(firstName.getText(), lastName.getText(), insuranceName.getText(), insurancePolicy.getText(), coPay, address.getText(),
                telephoneNumber.getText(), emergencyContact.getText(), medicalBackground.getText(), socialSecurityNumber.getText(),
                married.isSelected() ? "yes" : "no", eMailAddress.getText(), male.isSelected() ? "male" : "female");

        actionFirstName = firstName.getText();
        actionLastName = lastName.getText();
        
        data.addPatient(p);
        loadMedData.save(data);
        firstName.setText("");
        lastName.setText("");
        address.setText("");
        telephoneNumber.setText("");
        emergencyContact.setText("");
        eMailAddress.setText("");
        socialSecurityNumber.setText("");
        insuranceName.setText("");
        insurancePolicy.setText("");
        insuranceCoPay.setText("");
        medicalBackground.setText("");
    }//GEN-LAST:event_addPatientButton

    private void marriageStatusCheckBox(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_marriageStatusCheckBox
        // TODO add your handling code here:
    }//GEN-LAST:event_marriageStatusCheckBox

    private void maleCheckBoxButton(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maleCheckBoxButton
        // TODO add your handling code here:
        if (female.isSelected()) {
            female.setSelected(false);
        }
        male.setSelected(true);
    }//GEN-LAST:event_maleCheckBoxButton

    private void insuranceCoPayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insuranceCoPayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_insuranceCoPayActionPerformed

    private void addPatientCancelButtonaddPatientButton(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPatientCancelButtonaddPatientButton
        // TODO add your handling code here:
        firstName.setText("");
        lastName.setText("");
        address.setText("");
        telephoneNumber.setText("");
        emergencyContact.setText("");
        eMailAddress.setText("");
        socialSecurityNumber.setText("");
        insuranceName.setText("");
        insurancePolicy.setText("");
        insuranceCoPay.setText("");
        medicalBackground.setText("");
        
         if (tempBackButton == 2) {
        CardLayout card = (CardLayout) displayPanel.getLayout();
        card.show(displayPanel, "card5");
        } else if(tempBackButton == 3 && tempAddBackButton != 4) {
        CardLayout card = (CardLayout) displayPanel.getLayout();
        card.show(displayPanel, "card6");
        } else if(tempBackButton == 3 && tempAddBackButton == 4) {
        CardLayout card = (CardLayout) displayPanel.getLayout();
        card.show(displayPanel, "card5");
        } else {
        CardLayout card = (CardLayout) displayPanel.getLayout();
        card.show(displayPanel, "card7");
        }
        
        tempAddBackButton = 0;
    }//GEN-LAST:event_addPatientCancelButtonaddPatientButton

    private void male1CheckBoxButton(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_male1CheckBoxButton
        // TODO add your handling code here:
    }//GEN-LAST:event_male1CheckBoxButton

    private void female1CheckBox(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_female1CheckBox
        // TODO add your handling code here:
    }//GEN-LAST:event_female1CheckBox

    private void married1marriageStatusCheckBox(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_married1marriageStatusCheckBox
        // TODO add your handling code here:
    }//GEN-LAST:event_married1marriageStatusCheckBox

    private void insuranceCoPay1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insuranceCoPay1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_insuranceCoPay1ActionPerformed

    private void modifyPatientPanel2(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifyPatientPanel2
        // TODO add your handling code here:
         
        CardLayout card3 = (CardLayout) extraRightPanel.getLayout();
        card3.show(extraRightPanel, "card31");
        
       
    }//GEN-LAST:event_modifyPatientPanel2

    private void modifyPatientDonemodifyPatientPanel2(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifyPatientDonemodifyPatientPanel2
        // TODO add your handling code here:
        double coPay;

        try {
            coPay = Double.parseDouble(insuranceCoPay1.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, "Invalid CoPay entry. Number required");

            return;
        }
        if (firstName1.getText().length() == 0) {
            JOptionPane.showMessageDialog(rootPane, "Form Incomplete");
            return;
        }
        if (lastName1.getText().length() == 0) {
            JOptionPane.showMessageDialog(rootPane, "Form Incomplete");
            return;
        }
        if (insuranceName1.getText().length() == 0) {
            JOptionPane.showMessageDialog(rootPane, "Form Incomplete");
            return;
        }
        if (address1.getText().length() == 0) {
            JOptionPane.showMessageDialog(rootPane, "Form Incomplete");
            return;
        }
        if (telephoneNumber1.getText().length() == 0) {
            JOptionPane.showMessageDialog(rootPane, "Form Incomplete");
            return;
        }
        if (emergencyContact1.getText().length() == 0) {
            JOptionPane.showMessageDialog(rootPane, "Form Incomplete");
            return;
        }
        if (medicalBackground1.getText().length() == 0) {
            JOptionPane.showMessageDialog(rootPane, "Form Incomplete");
            return;
        }
        if (socialSecurityNumber1.getText().length() == 0) {
            JOptionPane.showMessageDialog(rootPane, "Form Incomplete");
            return;
        }
        if (eMailAddress1.getText().length() == 0) {
            JOptionPane.showMessageDialog(rootPane, "Form Incomplete");
            return;
        }

        String oldFirstName = currentPatient.getFirstName();
        String oldLastName = currentPatient.getLastName();
        currentPatient.setCoPay(coPay);
        currentPatient.settFirstName(firstName1.getText());
        currentPatient.settLastName(lastName1.getText());
        currentPatient.setInsurance(insuranceName1.getText());
        currentPatient.setAddress(address1.getText());
        currentPatient.setTelephoneNumber(telephoneNumber1.getText());
        currentPatient.setEmergencyContact(emergencyContact1.getText());
        currentPatient.setMedicalBackground(medicalBackground1.getText());
        currentPatient.setSocialSecurityNumber(socialSecurityNumber1.getText());
        currentPatient.setEMailAddress(eMailAddress1.getText());

        data.updatePatientData(oldFirstName, oldLastName, currentPatient);
        loadMedData.save(data);
        
        CardLayout card3 = (CardLayout) extraRightPanel.getLayout();
        card3.show(extraRightPanel, "card32");

        firstName1.setText("");
        lastName1.setText("");
        address1.setText("");
        telephoneNumber1.setText("");
        emergencyContact1.setText("");
        eMailAddress1.setText("");
        socialSecurityNumber1.setText("");
        insuranceName1.setText("");
        insurancePolicy1.setText("");
        insuranceCoPay1.setText("");
        medicalBackground1.setText("");
        actionSwitch = 4;
    }//GEN-LAST:event_modifyPatientDonemodifyPatientPanel2

    private void modifyPatientCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifyPatientCancelActionPerformed
        // TODO add your handling code here:
        
        CardLayout card3 = (CardLayout) extraRightPanel.getLayout();
        card3.show(extraRightPanel, "card32");
        
        firstName1.setText("");
        lastName1.setText("");
        address1.setText("");
        telephoneNumber1.setText("");
        emergencyContact1.setText("");
        eMailAddress1.setText("");
        socialSecurityNumber1.setText("");
        insuranceName1.setText("");
        insurancePolicy1.setText("");
        insuranceCoPay1.setText("");
        medicalBackground1.setText("");
    }//GEN-LAST:event_modifyPatientCancelActionPerformed

    private void modifyPatientCancel1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifyPatientCancel1ActionPerformed
        // TODO add your handling code here:
         
        CardLayout card3 = (CardLayout) extraRightPanel.getLayout();
        card3.show(extraRightPanel, "card32");
        
        firstName1.setText("");
        lastName1.setText("");
        address1.setText("");
        telephoneNumber1.setText("");
        emergencyContact1.setText("");
        eMailAddress1.setText("");
        socialSecurityNumber1.setText("");
        insuranceName1.setText("");
        insurancePolicy1.setText("");
        insuranceCoPay1.setText("");
        medicalBackground1.setText("");
    }//GEN-LAST:event_modifyPatientCancel1ActionPerformed

    private void patientHistoryBackButton(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientHistoryBackButton
        // TODO add your handling code here:
        CardLayout card = (CardLayout) displayPanel.getLayout();
        card.show(displayPanel, "card5");
    }//GEN-LAST:event_patientHistoryBackButton

    private void patientHistoryPrintButton(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientHistoryPrintButton
        // TODO add your handling code here:

    }//GEN-LAST:event_patientHistoryPrintButton

    private void historyDoneButtonpatientHistoryPrintButton(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_historyDoneButtonpatientHistoryPrintButton
        // TODO add your handling code here:
    }//GEN-LAST:event_historyDoneButtonpatientHistoryPrintButton

    private void historyDisplayButtonpatientHistoryPrintButton(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_historyDisplayButtonpatientHistoryPrintButton
        // TODO add your handling code here:
    }//GEN-LAST:event_historyDisplayButtonpatientHistoryPrintButton

    private void patientHistoryDisplayButtonpat(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientHistoryDisplayButtonpat
        // TODO add your handling code here:
        if (searchResults.getSelectedIndex() == -1) {
            return;
        }
        currentPatient = currentPatientList.get(searchResults.getSelectedIndex());
        historyPatientName.setText(currentPatient.getFirstName() + " " + currentPatient.getLastName());
        currentVisitList = currentPatient.getVisits();
        for (Visit v : currentVisitList) {
             historyVisitList.add((v.getTime().get(Calendar.MONTH) + 1) + "/"
                    + v.getTime().get(Calendar.DAY_OF_MONTH) + "/"
                    + v.getTime().get(Calendar.YEAR) + " "
                    + (v.getTime().get(Calendar.HOUR_OF_DAY) * 100 + v.getTime().get(Calendar.MINUTE)));
        }
        CardLayout card = (CardLayout) displayPanel.getLayout();
        card.show(displayPanel, "card8");
    }//GEN-LAST:event_patientHistoryDisplayButtonpat

    private void modifyInfoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifyInfoButtonActionPerformed
        // TODO add your handling code here:
        if (searchResults.getSelectedIndex() == -1) {
            return;
        }
        currentPatient = currentPatientList.get(searchResults.getSelectedIndex());
         CardLayout card3 = (CardLayout) extraRightPanel.getLayout();
        card3.show(extraRightPanel, "card20");
        if (currentPatient.getSex().equals("male")) {
            male1.setSelected(true);
        } else {
            female1.setSelected(true);
        }
        firstName1.setText(currentPatient.getFirstName());
        lastName1.setText(currentPatient.getLastName());
        address1.setText(currentPatient.getAddress());
        telephoneNumber1.setText(currentPatient.getTelephoneNumber());
        emergencyContact1.setText(currentPatient.getEmergencyContact());
        eMailAddress1.setText(currentPatient.getEMailAddress());
        socialSecurityNumber1.setText(currentPatient.getSocialSecurityNumber());
        if (currentPatient.getMaritalStatus().equals("yes")) {
            married1.setSelected(true);
        }
        insuranceName1.setText(currentPatient.getInsurance());
        insurancePolicy1.setText(currentPatient.getInsurancePolicy());
        insuranceCoPay1.setText("" + currentPatient.getCoPay());
        medicalBackground1.setText(currentPatient.getMedicalBackground());

    }//GEN-LAST:event_modifyInfoButtonActionPerformed

    private void check_inButton(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_check_inButton
        // TODO add your handling code here:
          if (searchResults.getSelectedIndex() == -1) {
            return;
        }
        currentPatient = currentPatientList.get(searchResults.getSelectedIndex());
        walkInReasonForVisitTextField.setText("");
        walkInDoctorList.removeAll();
        for (String d : doctors) {
            walkInDoctorList.add(d);
        }
        
        CardLayout card2 = (CardLayout) reminderTab.getLayout();
        card2.show(reminderTab, "card10");
    }//GEN-LAST:event_check_inButton

    private void searchPatientBackButton(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchPatientBackButton
        // TODO add your handling code here:
        if (tempBackButton == 3) {
            CardLayout card = (CardLayout) displayPanel.getLayout();
            card.show(displayPanel, "card6");
        } else {
            CardLayout card = (CardLayout) displayPanel.getLayout();
            card.show(displayPanel, "card7");
        }
        tempAddBackButton = 0;
    }//GEN-LAST:event_searchPatientBackButton

    private void addPatientPanelButtonsearch(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPatientPanelButtonsearch
        // TODO add your handling code here:
        CardLayout card = (CardLayout) displayPanel.getLayout();
        card.show(displayPanel, "card2");
        tempAddBackButton = 4;
    }//GEN-LAST:event_addPatientPanelButtonsearch

    private void searchFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchFieldActionPerformed

    private void searchFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchFieldKeyTyped
        // TODO add your handling code here:
        searchResults.removeAll();
        if (searchField.getText().equals("")) {
            return;
        }
        currentPatientList = data.findPatientByName(searchField.getText());
        for (Patient p : currentPatientList) {
            searchResults.add(p.getFirstName() + " " + p.getLastName() + " " + p.getTelephoneNumber() + " " + p.getAddress());

        }
    }//GEN-LAST:event_searchFieldKeyTyped

    private void searchResultsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchResultsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchResultsActionPerformed

    private void updateAccountButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateAccountButtonActionPerformed
        // TODO add your handling code here:
        if (searchResults.getSelectedIndex() == -1) {
            return;
        }
        currentPatient = currentPatientList.get(searchResults.getSelectedIndex());
        accountHoldersName.setText(currentPatient.getFirstName() + " " + currentPatient.getLastName());
        currentBalance.setText("$" + currentPatient.getBalance());
        amountInput.setText("" + currentPatient.getBalance());
        CardLayout card2 = (CardLayout) reminderTab.getLayout();
        card2.show(reminderTab, "card20");
    }//GEN-LAST:event_updateAccountButtonActionPerformed

    private void addAppointmentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addAppointmentButtonActionPerformed
        // TODO add your handling code here:
         if (searchResults.getSelectedIndex() == -1) {
            return;
        }
        currentPatient = currentPatientList.get(searchResults.getSelectedIndex());
        appointmentDoctorList.removeAll();
        appointmentPatientName.setText(currentPatient.getFirstName() + " " + currentPatient.getLastName());
        for (String d : doctors) {
            appointmentDoctorList.add(d);
        }
        CardLayout card = (CardLayout) displayPanel.getLayout();
        card.show(displayPanel, "card11");

    }//GEN-LAST:event_addAppointmentButtonActionPerformed

    private void amountInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_amountInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_amountInputActionPerformed

    private void accountUpdateSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accountUpdateSubmitActionPerformed
        // TODO add your handling code here:
         double payment = 0;
        try {
            payment = Double.parseDouble(amountInput.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(updateAccountFrame, "Invalid entry. Number required");
            return;
        }
        if (Double.compare(currentPatient.getBalance(), payment) < 0) {
            JOptionPane.showMessageDialog(updateAccountFrame, "Invalid amount, negative balance");
            return;
        }
        currentPatient.setBalance(currentPatient.getBalance() - payment);
        data.writePatientData(currentPatient);
        loadMedData.save(data);
        actionSwitch = 2;
        CardLayout card2 = (CardLayout) reminderTab.getLayout();
        card2.show(reminderTab, "card9");
    }//GEN-LAST:event_accountUpdateSubmitActionPerformed

    private void addAppointmentButton(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addAppointmentButton
        // TODO add your handling code here:
  if (reasonForVisitField.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Form Incomplete, Enter reason for visit");
            return;
        }
        if (appointmentDoctorList.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(rootPane, "Form Incomplete, Select Doctor");
            return;
        }
        if (!modifyAppointment && availableTimesList.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(rootPane, "Form Incomplete, Select Date and Time");
            return;
        }
        Calendar c = null;
        if (modifyAppointment && availableTimesList.getSelectedItem() == null) {
            c = data.getAppointmentsForDay(viewAppointmentCalendar.getSelectedDate()).get(viewAppointmentList.getSelectedIndex()).getTime();
        }
        if (modifyAppointment) {
            data.deleteAppointment(currentAppointment);
            Appointment a = new Appointment(currentPatient, appointmentDoctorList.getSelectedItem(),
                    reasonForVisitField.getText(), (c != null) ? c : availableTimes.get(availableTimesList.getSelectedIndex()));
            data.addAppointment(a);
            loadMedData.save(data);
            reasonForVisitField.setText("");
            appointmentDoctorList.removeAll();
            availableTimesList.removeAll();
            CardLayout card = (CardLayout) displayPanel.getLayout();
            card.show(displayPanel, "card5");
            modifyAppointment = false;
            return;
        }
        actionSwitch = 5;
        Appointment a = new Appointment(currentPatient, appointmentDoctorList.getSelectedItem(),
                reasonForVisitField.getText(), availableTimes.get(availableTimesList.getSelectedIndex()));
        data.addAppointment(a);
        loadMedData.save(data);
        patientNameArray[z2] = a.getPatientName();
        z2++;
        reasonForVisitField.setText("");
        appointmentDoctorList.removeAll();
        availableTimesList.removeAll();
        tempAppointment[z] = a.getPatientName() + " " + (a.getTime().get(Calendar.MONTH) + 1)+ "/"
                    + a.getTime().get(Calendar.DAY_OF_MONTH) + "/" + a.getTime().get(Calendar.YEAR) + " "
                    + (a.getTime().get(Calendar.HOUR_OF_DAY) * 100 + a.getTime().get(Calendar.MINUTE));
        z++;

        CardLayout card = (CardLayout) displayPanel.getLayout();
        card.show(displayPanel, "card5");
        for(int d = 0; d < 100; d++){
            if(tempAppointment[d].equals(empty)){
                outer: for(int j = d; j < 100; j++) {
                    if(!tempAppointment[j].equals(empty)) {
                        tempAppointment[d] = tempAppointment[j];
                        patientNameArray[d] = tempAppointment[j];
                        break outer;
                    }
                }   
            } 
        }
    }//GEN-LAST:event_addAppointmentButton

    private void addAppointmentBackButton(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addAppointmentBackButton
        // TODO add your handling code here:
        CardLayout card = (CardLayout) displayPanel.getLayout();
        card.show(displayPanel, "card5");
    }//GEN-LAST:event_addAppointmentBackButton

    private void dateChooserPanel1OnSelectionChange(datechooser.events.SelectionChangedEvent evt) {//GEN-FIRST:event_dateChooserPanel1OnSelectionChange
        // TODO add your handling code here:
        availableTimesList.removeAll();
        unavailableTimes.clear();
        availableTimes.clear();
        //ADDED 4-11-15 TO STOP APPOINTMENTS BEING MADE BEFORE CURRENT DATE
        Calendar dateCheck = Calendar.getInstance();
        dateCheck.add(Calendar.DATE, -1);
        if (dateChooserPanel1.getSelectedDate().before(dateCheck)) {
            return;
        }
        //END 4-11-15 MODIFICATIONS
        currentAppointmentList = data.getAppointmentsForDay(dateChooserPanel1.getSelectedDate());
        for (Appointment a : currentAppointmentList) {
            unavailableTimes.add((a.getTime().get(Calendar.HOUR_OF_DAY) * 100) + a.getTime().get(Calendar.MINUTE));
            System.out.println((a.getTime().get(Calendar.HOUR_OF_DAY) * 100) + a.getTime().get(Calendar.MINUTE));
        }
        for (int i = 0, hour = 8, minute = 0; i < 41; i++) {
            Calendar t = Calendar.getInstance();
            t.set(dateChooserPanel1.getSelectedDate().get(Calendar.YEAR), dateChooserPanel1.getSelectedDate().get(Calendar.MONTH),
                dateChooserPanel1.getSelectedDate().get(Calendar.DAY_OF_MONTH), hour, minute);

            if (!unavailableTimes.contains((t.get(Calendar.HOUR_OF_DAY) * 100) + t.get(Calendar.MINUTE))) {
                availableTimes.add(t);
            }
            minute += 15;
            if (minute == 60) {
                hour++;
                minute = 0;
            }
        }
        for (Calendar t : availableTimes) {
            availableTimesList.add(t.get(Calendar.HOUR_OF_DAY) + ":" + (t.get(Calendar.MINUTE) == 0 ? "00" : t.get(Calendar.MINUTE)));
        }

    }//GEN-LAST:event_dateChooserPanel1OnSelectionChange

    private void dateChooserPanel1OnCommit(datechooser.events.CommitEvent evt) {//GEN-FIRST:event_dateChooserPanel1OnCommit
        // TODO add your handling code here:
    }//GEN-LAST:event_dateChooserPanel1OnCommit

    private void addPatientCancelButton1addPatientButton(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPatientCancelButton1addPatientButton
        // TODO add your handling code here:
        reasonForVisitField.setText("");
        appointmentDoctorList.removeAll();
        availableTimesList.removeAll();
             CardLayout card = (CardLayout) displayPanel.getLayout();
        card.show(displayPanel, "card5");
    }//GEN-LAST:event_addPatientCancelButton1addPatientButton

    private void jButton33addAppointmentBackButton(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton33addAppointmentBackButton
        // TODO add your handling code here:
            CardLayout card = (CardLayout) displayPanel.getLayout();
        card.show(displayPanel, "card7");
    }//GEN-LAST:event_jButton33addAppointmentBackButton

    private void viewAppointmentCalendarOnSelectionChange(datechooser.events.SelectionChangedEvent evt) {//GEN-FIRST:event_viewAppointmentCalendarOnSelectionChange
        // TODO add your handling code here:
        viewAppointmentList.removeAll();
        for (Appointment a : data.getAppointmentsForDay(viewAppointmentCalendar.getSelectedDate())) {
            viewAppointmentList.add(a.getPatientName() + " "
                + a.getTime().get(Calendar.HOUR_OF_DAY) + ":" + (a.getTime().get(Calendar.MINUTE) == 0 ? "00" : a.getTime().get(Calendar.MINUTE)));
        }
    }//GEN-LAST:event_viewAppointmentCalendarOnSelectionChange

    private void viewAppointmentListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewAppointmentListActionPerformed
        // TODO add your handling code here:

        viewAppointmentName.setText("Name: "
            + data.getAppointmentsForDay(viewAppointmentCalendar.getSelectedDate()).get(viewAppointmentList.getSelectedIndex()).getPatientName());
        viewAppointmentContact.setText("Contact: "
            + data.getAppointmentsForDay(viewAppointmentCalendar.getSelectedDate()).get(viewAppointmentList.getSelectedIndex()).getContact());
        viewAppointmentDoctor.setText("Doctor: "
            + data.getAppointmentsForDay(viewAppointmentCalendar.getSelectedDate()).get(viewAppointmentList.getSelectedIndex()).getDoctor());
        viewAppointmentReason.setText("Reason: "
            + data.getAppointmentsForDay(viewAppointmentCalendar.getSelectedDate()).get(viewAppointmentList.getSelectedIndex()).getReasonForVisit());
        
    }//GEN-LAST:event_viewAppointmentListActionPerformed

    private void viewAppointmentsModifyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewAppointmentsModifyButtonActionPerformed
        // TODO add your handling code here:
        if (findAppointmentResultList.getSelectedIndex() == -1
            || currentAppointmentList.get(findAppointmentResultList.getSelectedIndex()) == null) {
            return;
        }
        modifyAppointment = true;
        currentAppointment = data.getAppointmentsForDay(viewAppointmentCalendar.getSelectedDate()).get(viewAppointmentList.getSelectedIndex());
        currentPatient = data.getPatientByID(data.getAppointmentsForDay(viewAppointmentCalendar.getSelectedDate()).get(viewAppointmentList.getSelectedIndex()).getPatientID());
        appointmentDoctorList.removeAll();
        appointmentPatientName.setText(currentPatient.getFirstName() + " " + currentPatient.getLastName());
        int selectedDoctor = 0;
        for (int i = 0; i < doctors.size(); i++) {
            appointmentDoctorList.add(doctors.get(i));
            if (doctors.get(i).equals(data.getAppointmentsForDay(viewAppointmentCalendar.getSelectedDate()).get(viewAppointmentList.getSelectedIndex()).getDoctor())) {
                selectedDoctor = i;
            }
        }
        reasonForVisitField.setText(data.getAppointmentsForDay(viewAppointmentCalendar.getSelectedDate()).get(viewAppointmentList.getSelectedIndex()).getReasonForVisit());
        CardLayout card = (CardLayout) displayPanel.getLayout();
        card.show(displayPanel, "card11");
        dateChooserPanel1.setSelectedDate(viewAppointmentCalendar.getSelectedDate());
        appointmentDoctorList.select(selectedDoctor);
    }//GEN-LAST:event_viewAppointmentsModifyButtonActionPerformed

    private void viewAppointmentsDelteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewAppointmentsDelteButtonActionPerformed
        // TODO add your handling code here:
        if (viewAppointmentList.getSelectedIndex() == -1
            || data.getAppointmentsForDay(viewAppointmentCalendar.getSelectedDate()).get(viewAppointmentList.getSelectedIndex()) == null) {
            return;
        }
        data.deleteAppointment(data.getAppointmentsForDay(viewAppointmentCalendar.getSelectedDate()).get(viewAppointmentList.getSelectedIndex()));
        loadMedData.save(data);
        viewAppointmentList.removeAll();
        for (Appointment a : data.getAppointmentsForDay(viewAppointmentCalendar.getSelectedDate())) {
            viewAppointmentList.add(a.getPatientName() + " "
                + a.getTime().get(Calendar.HOUR_OF_DAY) + ":" + (a.getTime().get(Calendar.MINUTE) == 0 ? "00" : a.getTime().get(Calendar.MINUTE)));
        }
        viewAppointmentName.setText("Name: ");
        viewAppointmentContact.setText("Contact: ");
        viewAppointmentDoctor.setText("Doctor: ");
        viewAppointmentReason.setText("Reason: ");
        
    }//GEN-LAST:event_viewAppointmentsDelteButtonActionPerformed

    private void findAppointmentNameFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_findAppointmentNameFieldKeyTyped
        // TODO add your handling code here:
        findAppointmentResultList.removeAll();
        currentAppointmentList.clear();
        if (findAppointmentNameField.getText().equals("")) {
            return;
        }
        currentPatientList = data.findPatientByName(findAppointmentNameField.getText());
        for (Patient p : currentPatientList) {
            currentAppointmentList.addAll(data.getAppointmentByPatientID(p.getPatientID()));

        }

        for (Appointment a : currentAppointmentList) {
            findAppointmentResultList.add(a.getPatientName() + " " + a.getTime().get(Calendar.MONTH) + "/"
                + a.getTime().get(Calendar.DAY_OF_MONTH) + "/" + a.getTime().get(Calendar.YEAR) + " "
                + (a.getTime().get(Calendar.HOUR_OF_DAY) * 100 + a.getTime().get(Calendar.MINUTE)));
        }
    }//GEN-LAST:event_findAppointmentNameFieldKeyTyped

    private void findAppointmentNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findAppointmentNameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_findAppointmentNameFieldActionPerformed

    private void findAppointmentResultListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findAppointmentResultListActionPerformed
        // TODO add your handling code here:
        findAppointmentName.setText("Name: "
            + currentAppointmentList.get(findAppointmentResultList.getSelectedIndex()).getPatientName());
        findAppointmentContact.setText("Contact: "
            + currentAppointmentList.get(findAppointmentResultList.getSelectedIndex()).getContact());
        findAppointmentDateTime.setText("Date/Time: "
            + currentAppointmentList.get(findAppointmentResultList.getSelectedIndex()).getTime().get(Calendar.MONTH) + "/"
            + currentAppointmentList.get(findAppointmentResultList.getSelectedIndex()).getTime().get(Calendar.DAY_OF_MONTH) + "/"
            + currentAppointmentList.get(findAppointmentResultList.getSelectedIndex()).getTime().get(Calendar.YEAR) + " "
            + (currentAppointmentList.get(findAppointmentResultList.getSelectedIndex()).getTime().get(Calendar.HOUR_OF_DAY) * 100
                + currentAppointmentList.get(findAppointmentResultList.getSelectedIndex()).getTime().get(Calendar.MINUTE)));
        viewAppointmentDoctor1.setText("Doctor: "
            + currentAppointmentList.get(findAppointmentResultList.getSelectedIndex()).getDoctor());
        viewAppointmentReason1.setText("Reason: "
            + currentAppointmentList.get(findAppointmentResultList.getSelectedIndex()).getReasonForVisit());

    }//GEN-LAST:event_findAppointmentResultListActionPerformed

    private void findAppointmentModifyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findAppointmentModifyButtonActionPerformed
        // TODO add your handling code here:
        if (findAppointmentResultList.getSelectedIndex() == -1
            || currentAppointmentList.get(findAppointmentResultList.getSelectedIndex()) == null) {
            return;
        }
        modifyAppointment = true;
        currentAppointment = currentAppointmentList.get(findAppointmentResultList.getSelectedIndex());
        currentPatient = data.getPatientByID(currentAppointmentList.get(findAppointmentResultList.getSelectedIndex()).getPatientID());
        appointmentDoctorList.removeAll();
        appointmentPatientName.setText(currentPatient.getFirstName() + " " + currentPatient.getLastName());
        int selectedDoctor = 0;
        for (int i = 0; i < doctors.size(); i++) {
            appointmentDoctorList.add(doctors.get(i));
            if (doctors.get(i).equals(currentAppointmentList.get(findAppointmentResultList.getSelectedIndex()).getDoctor())) {
                selectedDoctor = i;
            }
        }
        reasonForVisitField.setText(currentAppointmentList.get(findAppointmentResultList.getSelectedIndex()).getReasonForVisit());
      
        dateChooserPanel1.setSelectedDate(currentAppointmentList.get(findAppointmentResultList.getSelectedIndex()).getTime());
        appointmentDoctorList.select(selectedDoctor);
        CardLayout card = (CardLayout) displayPanel.getLayout();
        card.show(displayPanel, "card11");
    }//GEN-LAST:event_findAppointmentModifyButtonActionPerformed

    private void findAppointmentDeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findAppointmentDeleteButtonActionPerformed
        // TODO add your handling code here:
        if (findAppointmentResultList.getSelectedIndex() == -1
            || currentAppointmentList.get(findAppointmentResultList.getSelectedIndex()) == null) {
            return;
        }
        data.deleteAppointment(currentAppointmentList.get(findAppointmentResultList.getSelectedIndex()));
        loadMedData.save(data);
        findAppointmentName.setText("Name: ");
        findAppointmentContact.setText("Contact: ");
        findAppointmentDateTime.setText("Date/Time: ");
        viewAppointmentDoctor1.setText("Doctor: ");
        viewAppointmentReason1.setText("Reason: ");
        findAppointmentResultList.removeAll();
        currentAppointmentList.clear();
        if (findAppointmentNameField.getText().equals("")) {
            return;
        }
        currentPatientList = data.findPatientByName(findAppointmentNameField.getText());
        for (Patient p : currentPatientList) {
            currentAppointmentList.addAll(data.getAppointmentByPatientID(p.getPatientID()));
        }
        for (Appointment a : currentAppointmentList) {
            findAppointmentResultList.add(a.getPatientName() + " " + a.getTime().get(Calendar.MONTH) + "/"
                + a.getTime().get(Calendar.DAY_OF_MONTH) + "/" + a.getTime().get(Calendar.YEAR) + " "
                + (a.getTime().get(Calendar.HOUR_OF_DAY) * 100 + a.getTime().get(Calendar.MINUTE)));
        }
    }//GEN-LAST:event_findAppointmentDeleteButtonActionPerformed

    private void accountUpdateSubmit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accountUpdateSubmit1ActionPerformed
        // TODO add your handling code here:
        CardLayout card2 = (CardLayout) reminderTab.getLayout();
        card2.show(reminderTab, "card9");
    }//GEN-LAST:event_accountUpdateSubmit1ActionPerformed

    private void jButton19addAppointmentPanelButton(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton19addAppointmentPanelButton
        // TODO add your handling code here:
        CardLayout card = (CardLayout) displayPanel.getLayout();
        card.show(displayPanel, "card5");
    }//GEN-LAST:event_jButton19addAppointmentPanelButton

    private void jButton17addPatientBackButton(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17addPatientBackButton
        // TODO add your handling code here:
        CardLayout card = (CardLayout) displayPanel.getLayout();
        card.show(displayPanel, "card7");
    }//GEN-LAST:event_jButton17addPatientBackButton

    private void removeDoctorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeDoctorButtonActionPerformed
        // TODO add your handling code here:
        data.removeDoctor(doctorList.getSelectedItem());
        loadMedData.save(data);
        doctors = data.getDoctors();
        doctorList.removeAll();
        for (String d : doctors) {
            doctorList.add(d);
        }
    }//GEN-LAST:event_removeDoctorButtonActionPerformed

    private void addDoctorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addDoctorButtonActionPerformed
        // TODO add your handling code here:
        if (!addDoctorField.equals("")) {
            data.addDoctor(addDoctorField.getText());
            loadMedData.save(data);
            addDoctorField.setText("");
            doctors = data.getDoctors();
            doctorList.removeAll();
            for (String d : doctors) {
                doctorList.add(d);
                actionSwitch = 6;
            }
        }
    }//GEN-LAST:event_addDoctorButtonActionPerformed

    private void addDoctorFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addDoctorFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addDoctorFieldActionPerformed

    private void jTabbedPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MouseClicked
        // TODO add your handling code here:
        updateTodaysAppointments();
    }//GEN-LAST:event_jTabbedPane1MouseClicked

    private void todaysAppointmentListFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_todaysAppointmentListFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_todaysAppointmentListFocusGained

    private void todaysAppointmentListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_todaysAppointmentListActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_todaysAppointmentListActionPerformed

    private void checkInButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkInButtonActionPerformed
        // TODO add your handling code here:
         if (todaysAppointmentList.getSelectedIndex() == -1) {
            return;
        }
        Appointment a = data.getAppointmentsForDay(Calendar.getInstance()).get(todaysAppointmentList.getSelectedIndex());
        Patient p = data.getPatientByID(data.getAppointmentsForDay(Calendar.getInstance()).get(todaysAppointmentList.getSelectedIndex()).getPatientID());
        Visit v = new Visit(p, a.getTime(), a.getReasonForVisit(), a.getDoctor());
        data.checkIn(v);
        data.deleteAppointment(a);
        loadMedData.save(data);
        updateTodaysAppointments();
        CardLayout card3 = (CardLayout) extraRightPanel.getLayout();
        card3.show(extraRightPanel, "card32");
    }//GEN-LAST:event_checkInButtonActionPerformed

    private void inProgressListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inProgressListActionPerformed
        // TODO add your handling code here:
        if (inProgressList.getSelectedIndex() == -1) {
            return;
        }
        checkOutPatientButton.setText("Patient: " + data.getCheckedIn().get(inProgressList.getSelectedIndex()).getPatientName());
    }//GEN-LAST:event_inProgressListActionPerformed

    private void checkInButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkInButton1ActionPerformed
        // TODO add your handling code here:
        CardLayout card3 = (CardLayout) extraRightPanel.getLayout();
        card3.show(extraRightPanel, "card32");
    }//GEN-LAST:event_checkInButton1ActionPerformed

    private void walkInCheckInButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_walkInCheckInButtonActionPerformed
        // TODO add your handling code here:
        if (walkInReasonForVisitTextField.getText().equals("")) {
            JOptionPane.showMessageDialog(reminderTab, "Form Incomplete, Enter Reason For Visit");
            return;
        }
        if (walkInDoctorList.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(reminderTab, "Form Incomplete, Select Doctor");
            return;
        }
        Visit v = new Visit(currentPatient, Calendar.getInstance(), walkInReasonForVisitTextField.getText(), walkInDoctorList.getSelectedItem());
        data.checkIn(v);
        loadMedData.save(data);
        walkInReasonForVisitTextField.setText("");
        walkInDoctorList.removeAll();
        CardLayout card2 = (CardLayout) reminderTab.getLayout();
        card2.show(reminderTab, "card9");
    }//GEN-LAST:event_walkInCheckInButtonActionPerformed

    private void walkInCancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_walkInCancelButtonActionPerformed
        // TODO add your handling code here:
        walkInReasonForVisitTextField.setText("");
        walkInDoctorList.removeAll();
        CardLayout card2 = (CardLayout) reminderTab.getLayout();
        card2.show(reminderTab, "card9");
    }//GEN-LAST:event_walkInCancelButtonActionPerformed

    private void modifyPatientBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifyPatientBackActionPerformed
        // TODO add your handling code here:
        CardLayout card3 = (CardLayout) extraRightPanel.getLayout();
        card3.show(extraRightPanel, "card20");
    }//GEN-LAST:event_modifyPatientBackActionPerformed

    private void extraRightPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_extraRightPanelMouseClicked

    }//GEN-LAST:event_extraRightPanelMouseClicked

    private void jButton29MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton29MouseEntered
            verifyPopUp.setText("Verify");
    }//GEN-LAST:event_jButton29MouseEntered

    private void jButton29MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton29MouseExited
            verifyPopUp.setText("");
    }//GEN-LAST:event_jButton29MouseExited

    private void jButton27MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton27MouseEntered
            unknownPopUp.setText("Unknown");
    }//GEN-LAST:event_jButton27MouseEntered

    private void jButton27MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton27MouseExited
            unknownPopUp.setText("");
    }//GEN-LAST:event_jButton27MouseExited

    private void jButton28MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton28MouseEntered
            cancelPopUp.setText("Cancel");
    }//GEN-LAST:event_jButton28MouseEntered

    private void jButton28MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton28MouseExited
            cancelPopUp.setText("");
    }//GEN-LAST:event_jButton28MouseExited

    private void walkInCancelButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_walkInCancelButtonMouseEntered
            cancelPopUp1.setText("Cancel");
    }//GEN-LAST:event_walkInCancelButtonMouseEntered

    private void walkInCancelButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_walkInCancelButtonMouseExited
            cancelPopUp1.setText("");
    }//GEN-LAST:event_walkInCancelButtonMouseExited

    private void walkInCheckInButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_walkInCheckInButtonMouseEntered
            verifyPopUp1.setText("Submit");
    }//GEN-LAST:event_walkInCheckInButtonMouseEntered

    private void accountUpdateSubmit1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_accountUpdateSubmit1MouseEntered
            cancelPopUp2.setText("Cancel");
    }//GEN-LAST:event_accountUpdateSubmit1MouseEntered

    private void accountUpdateSubmit1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_accountUpdateSubmit1MouseExited
            cancelPopUp2.setText("");
    }//GEN-LAST:event_accountUpdateSubmit1MouseExited

    private void accountUpdateSubmitMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_accountUpdateSubmitMouseEntered
            verifyPopUp2.setText("Sumbit");
    }//GEN-LAST:event_accountUpdateSubmitMouseEntered

    private void accountUpdateSubmitMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_accountUpdateSubmitMouseExited
            verifyPopUp2.setText("");
    }//GEN-LAST:event_accountUpdateSubmitMouseExited

    private void walkInCheckInButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_walkInCheckInButtonMouseExited
            verifyPopUp1.setText("");
    }//GEN-LAST:event_walkInCheckInButtonMouseExited

    private void jButton6MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton6MouseEntered
            addButtonPopUp.setText("  Add Patient");
    }//GEN-LAST:event_jButton6MouseEntered

    private void jButton6MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton6MouseExited
            addButtonPopUp.setText("  Add Patient");
    }//GEN-LAST:event_jButton6MouseExited

    private void jButton5MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5MouseEntered
            addButtonPopUp1.setText("     Search Patient");
    }//GEN-LAST:event_jButton5MouseEntered

    private void jButton5MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5MouseExited
            addButtonPopUp1.setText("     Search Patient");
    }//GEN-LAST:event_jButton5MouseExited

    private void jButton1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseEntered
            checkoutPopUp2.setText("   Check out");
    }//GEN-LAST:event_jButton1MouseEntered

    private void jButton1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseExited
            checkoutPopUp2.setText("   Check out");
    }//GEN-LAST:event_jButton1MouseExited

    private void jButton4MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseEntered
            addAppointtPopUp3.setText("     Search Appointment");
    }//GEN-LAST:event_jButton4MouseEntered

    private void jButton4MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseExited
            addAppointtPopUp3.setText("     Search Appointment");
    }//GEN-LAST:event_jButton4MouseExited

    private void jButton20check_inButton(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton20check_inButton
        CardLayout card3 = (CardLayout) extraRightPanel.getLayout();
        card3.show(extraRightPanel, "card35");
        updateTodaysAppointments();
    }//GEN-LAST:event_jButton20check_inButton

    private void jButton20MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton20MouseExited
            maindisplayPopLabel.setText("");
    }//GEN-LAST:event_jButton20MouseExited

    private void jButton20MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton20MouseEntered
            maindisplayPopLabel.setText("Check-In");
    }//GEN-LAST:event_jButton20MouseEntered

    private void jButton20MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton20MouseMoved

    }//GEN-LAST:event_jButton20MouseMoved

    private void jButton35addAppointmentBackButton(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton35addAppointmentBackButton
            CardLayout card = (CardLayout) displayPanel.getLayout();
            card.show(displayPanel, "card50");
    }//GEN-LAST:event_jButton35addAppointmentBackButton

    private void jButton35MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton35MouseExited
            maindisplayPopLabel.setText("");
    }//GEN-LAST:event_jButton35MouseExited

    private void jButton35MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton35MouseEntered
            maindisplayPopLabel.setText("                    Configure");
    }//GEN-LAST:event_jButton35MouseEntered

    private void jButton34addAppointmentBackButton(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton34addAppointmentBackButton
            CardLayout card = (CardLayout) displayPanel.getLayout();
            card.show(displayPanel, "card40");
    }//GEN-LAST:event_jButton34addAppointmentBackButton

    private void jButton34MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton34MouseExited
            maindisplayPopLabel.setText("");
    }//GEN-LAST:event_jButton34MouseExited

    private void jButton34MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton34MouseEntered
            maindisplayPopLabel.setText("                       View Appointment");
    }//GEN-LAST:event_jButton34MouseEntered

    private void jButton2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseEntered
            calendarPopUp3.setText("    Calendar");
    }//GEN-LAST:event_jButton2MouseEntered

    private void jButton2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseExited
            calendarPopUp3.setText("    Calendar");
    }//GEN-LAST:event_jButton2MouseExited

    private void jButton3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseEntered
            mainpopUp4.setText("      Home");
    }//GEN-LAST:event_jButton3MouseEntered

    private void jButton3MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseExited
            mainpopUp4.setText("      Home");
    }//GEN-LAST:event_jButton3MouseExited

    private void checkInButton1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkInButton1MouseEntered
            cancelPopUp3.setText("Cancel");
    }//GEN-LAST:event_checkInButton1MouseEntered

    private void checkInButton1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkInButton1MouseExited
            cancelPopUp3.setText("");
    }//GEN-LAST:event_checkInButton1MouseExited

    private void checkInButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkInButtonMouseEntered
            verifyPopUp3.setText("Check In");
    }//GEN-LAST:event_checkInButtonMouseEntered

    private void checkInButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkInButtonMouseExited
            verifyPopUp3.setText("");
    }//GEN-LAST:event_checkInButtonMouseExited

    private void modifyPatientCancelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_modifyPatientCancelMouseEntered
            cancelPopUp4.setText("Cancel");
    }//GEN-LAST:event_modifyPatientCancelMouseEntered

    private void modifyPatientCancelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_modifyPatientCancelMouseExited
            cancelPopUp4.setText("");
    }//GEN-LAST:event_modifyPatientCancelMouseExited

    private void modifyPatientDoneMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_modifyPatientDoneMouseEntered
            verifyPopUp4.setText("Submit");
    }//GEN-LAST:event_modifyPatientDoneMouseEntered

    private void modifyPatientDoneMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_modifyPatientDoneMouseExited
            verifyPopUp4.setText("");
    }//GEN-LAST:event_modifyPatientDoneMouseExited

    private void modifyPatientCancel1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_modifyPatientCancel1MouseEntered
            cancelPopUp5.setText("  Cancel");
    }//GEN-LAST:event_modifyPatientCancel1MouseEntered

    private void modifyPatientCancel1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_modifyPatientCancel1MouseExited
            cancelPopUp5.setText("");
    }//GEN-LAST:event_modifyPatientCancel1MouseExited

    private void jButton11MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton11MouseEntered
            addPatientPopLabel.setText("         Add");
    }//GEN-LAST:event_jButton11MouseEntered

    private void jButton11MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton11MouseExited
            addPatientPopLabel.setText("");
    }//GEN-LAST:event_jButton11MouseExited

    private void addPatientCancelButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addPatientCancelButtonMouseEntered
            addPatientPopLabel.setText("                         Cancel");
    }//GEN-LAST:event_addPatientCancelButtonMouseEntered

    private void addPatientCancelButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addPatientCancelButtonMouseExited
            addPatientPopLabel.setText("");
    }//GEN-LAST:event_addPatientCancelButtonMouseExited

    private void checkOutPatientButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkOutPatientButtonMouseEntered
            verifyPopUp5.setText("Submit");
    }//GEN-LAST:event_checkOutPatientButtonMouseEntered

    private void checkOutPatientButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkOutPatientButtonMouseExited
            verifyPopUp5.setText("");
    }//GEN-LAST:event_checkOutPatientButtonMouseExited

    private void jButton13MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton13MouseEntered
            printPopUp6.setText("   Print");
    }//GEN-LAST:event_jButton13MouseEntered

    private void jButton13MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton13MouseExited
            printPopUp6.setText("");
    }//GEN-LAST:event_jButton13MouseExited

    private void findAppointmentDeleteButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_findAppointmentDeleteButtonMouseEntered
            removePopUp6.setText("Delete");
    }//GEN-LAST:event_findAppointmentDeleteButtonMouseEntered

    private void findAppointmentDeleteButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_findAppointmentDeleteButtonMouseExited
            removePopUp6.setText("");
    }//GEN-LAST:event_findAppointmentDeleteButtonMouseExited

    private void findAppointmentModifyButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_findAppointmentModifyButtonMouseEntered
            modifyPopUp7.setText("Modify");
    }//GEN-LAST:event_findAppointmentModifyButtonMouseEntered

    private void findAppointmentModifyButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_findAppointmentModifyButtonMouseExited
        modifyPopUp7.setText("");
    }//GEN-LAST:event_findAppointmentModifyButtonMouseExited

    private void jButton19MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton19MouseEntered
        searchAppointmentPopUpLabel.setText("Search Patient");
    }//GEN-LAST:event_jButton19MouseEntered

    private void jButton19MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton19MouseExited
         searchAppointmentPopUpLabel.setText("");
    }//GEN-LAST:event_jButton19MouseExited

    private void jButton18MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton18MouseEntered
         searchAppointmentPopUpLabel.setText("                     Add Patient");
    }//GEN-LAST:event_jButton18MouseEntered

    private void jButton18MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton18MouseExited
        searchAppointmentPopUpLabel.setText("");
    }//GEN-LAST:event_jButton18MouseExited

    private void jButton16MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton16MouseEntered
        walkInUpdatePopUp.setText("Walk In");
    }//GEN-LAST:event_jButton16MouseEntered

    private void jButton16MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton16MouseExited
        walkInUpdatePopUp.setText("");
    }//GEN-LAST:event_jButton16MouseExited

    private void updateAccountButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateAccountButtonMouseEntered
       walkInUpdatePopUp.setText("         Update Account");
    }//GEN-LAST:event_updateAccountButtonMouseEntered

    private void updateAccountButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateAccountButtonMouseExited
       walkInUpdatePopUp.setText("");
    }//GEN-LAST:event_updateAccountButtonMouseExited

    private void jButton22MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton22MouseEntered
        searchpateintPopUp1.setText("Patient History");
    }//GEN-LAST:event_jButton22MouseEntered

    private void jButton22MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton22MouseExited
        searchpateintPopUp1.setText("");
    }//GEN-LAST:event_jButton22MouseExited

    private void modifyInfoButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_modifyInfoButtonMouseEntered
        searchpateintPopUp1.setText("                     Modify Patient");
    }//GEN-LAST:event_modifyInfoButtonMouseEntered

    private void modifyInfoButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_modifyInfoButtonMouseExited
       searchpateintPopUp1.setText("");
    }//GEN-LAST:event_modifyInfoButtonMouseExited

    private void addAppointmentButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addAppointmentButtonMouseEntered
       searchpateintPopUp1.setText("                                    Add Appointment");
    }//GEN-LAST:event_addAppointmentButtonMouseEntered

    private void addAppointmentButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addAppointmentButtonMouseExited
       searchpateintPopUp1.setText("");
    }//GEN-LAST:event_addAppointmentButtonMouseExited

    private void jButton14MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton14MouseEntered
        searchpateintPopUp1.setText("                                                              Add Patient");
    }//GEN-LAST:event_jButton14MouseEntered

    private void jButton14MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton14MouseExited
        searchpateintPopUp1.setText("");
    }//GEN-LAST:event_jButton14MouseExited

    private void historyDoneButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_historyDoneButtonMouseEntered
        verifyPopUp6.setText("Done");
    }//GEN-LAST:event_historyDoneButtonMouseEntered

    private void historyDoneButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_historyDoneButtonMouseExited
        verifyPopUp6.setText("");
    }//GEN-LAST:event_historyDoneButtonMouseExited

    private void historyDisplayButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_historyDisplayButtonMouseEntered
       showHistoryPopUp.setText("Show History");
    }//GEN-LAST:event_historyDisplayButtonMouseEntered

    private void historyDisplayButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_historyDisplayButtonMouseExited
        showHistoryPopUp.setText("");
    }//GEN-LAST:event_historyDisplayButtonMouseExited

    private void jButton23MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton23MouseEntered
        printpathistoryPopUp.setText("        Print");
    }//GEN-LAST:event_jButton23MouseEntered

    private void jButton23MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton23MouseExited
       printpathistoryPopUp.setText("");
    }//GEN-LAST:event_jButton23MouseExited

    private void jButton32MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton32MouseEntered
        addapointmentPopUp.setText("   Add");
    }//GEN-LAST:event_jButton32MouseEntered

    private void jButton32MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton32MouseExited
        addapointmentPopUp.setText("");
    }//GEN-LAST:event_jButton32MouseExited

    private void addPatientCancelButton1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addPatientCancelButton1MouseEntered
        addapointmentPopUp.setText("                      Cancel");
    }//GEN-LAST:event_addPatientCancelButton1MouseEntered

    private void addPatientCancelButton1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addPatientCancelButton1MouseExited
        addapointmentPopUp.setText("");
    }//GEN-LAST:event_addPatientCancelButton1MouseExited

    private void viewAppointmentsModifyButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_viewAppointmentsModifyButtonMouseEntered
        cancelPopUp7.setText("Modify Appointment");
    }//GEN-LAST:event_viewAppointmentsModifyButtonMouseEntered

    private void viewAppointmentsModifyButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_viewAppointmentsModifyButtonMouseExited
        cancelPopUp7.setText("");
    }//GEN-LAST:event_viewAppointmentsModifyButtonMouseExited

    private void viewAppointmentsDelteButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_viewAppointmentsDelteButtonMouseEntered
       jLabel64.setText("Delete");
    }//GEN-LAST:event_viewAppointmentsDelteButtonMouseEntered

    private void viewAppointmentsDelteButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_viewAppointmentsDelteButtonMouseExited
        jLabel64.setText("");
    }//GEN-LAST:event_viewAppointmentsDelteButtonMouseExited

    private void addDoctorButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addDoctorButtonMouseClicked
      
    }//GEN-LAST:event_addDoctorButtonMouseClicked

    private void addDoctorButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addDoctorButtonMouseEntered
         jLabel62.setText("Add");
    }//GEN-LAST:event_addDoctorButtonMouseEntered

    private void addDoctorButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addDoctorButtonMouseExited
        jLabel62.setText("");
    }//GEN-LAST:event_addDoctorButtonMouseExited

    private void removeDoctorButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_removeDoctorButtonMouseEntered
        jLabel63.setText("Remove");
    }//GEN-LAST:event_removeDoctorButtonMouseEntered

    private void removeDoctorButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_removeDoctorButtonMouseExited
       jLabel63.setText("");
    }//GEN-LAST:event_removeDoctorButtonMouseExited

    private void jButton5MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5MouseDragged
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5MouseDragged

    private void availableTimesListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_availableTimesListActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_availableTimesListActionPerformed

    private void viewAppointmentCalendar1OnSelectionChange(datechooser.events.SelectionChangedEvent evt) {//GEN-FIRST:event_viewAppointmentCalendar1OnSelectionChange
        // TODO add your handling code here:
        viewAppointmentList1.removeAll();
        for (Appointment a : data.getAppointmentsForDay(viewAppointmentCalendar1.getSelectedDate())) {
            viewAppointmentList1.add(a.getPatientName() + " "
                + a.getTime().get(Calendar.HOUR_OF_DAY) + ":" + (a.getTime().get(Calendar.MINUTE) == 0 ? "00" : a.getTime().get(Calendar.MINUTE)));
        }
    }//GEN-LAST:event_viewAppointmentCalendar1OnSelectionChange

    private void viewAppointmentList1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewAppointmentList1ActionPerformed
        // TODO add your handling code here:

        viewAppointmentName1.setText("Name: "
            + data.getAppointmentsForDay(viewAppointmentCalendar1.getSelectedDate()).get(viewAppointmentList1.getSelectedIndex()).getPatientName());
        viewAppointmentContact1.setText("Contact: "
            + data.getAppointmentsForDay(viewAppointmentCalendar1.getSelectedDate()).get(viewAppointmentList1.getSelectedIndex()).getContact());
        viewAppointmentDoctor2.setText("Doctor: "
            + data.getAppointmentsForDay(viewAppointmentCalendar1.getSelectedDate()).get(viewAppointmentList1.getSelectedIndex()).getDoctor());
        viewAppointmentReason2.setText("Reason: "
            + data.getAppointmentsForDay(viewAppointmentCalendar1.getSelectedDate()).get(viewAppointmentList1.getSelectedIndex()).getReasonForVisit());
        
    }//GEN-LAST:event_viewAppointmentList1ActionPerformed

    private void doctorListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doctorListActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_doctorListActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        for(int ing = 0; ing < 100; ing++){
            if(patientNameArray[0].equals(deletedpatientNameArray[ing])){
                tempAppointment[0] = tempAppointment[1]; 
                patientNameArray[0] = "";
                if(tempAppointment[1].equals(empty)){
                    tempAppointment[0] = "";
                }
                if(tempAppointment[2].equals(empty)) {
                     tempAppointment[1] = "";
                }
            }
            
        }
          
        for(int ing2 = 0; ing2 < 100; ing2++){
            if(patientNameArray[1].equals(deletedpatientNameArray[ing2])){
                tempAppointment[1] = tempAppointment[2];
                patientNameArray[1] = "";
                if(tempAppointment[2].equals(empty)){
                    tempAppointment[1] = "";
                }
                if(tempAppointment[3].equals(empty)) {
                     tempAppointment[2] = "";
                }
            }
            
        }
        
        for(int ing3 = 0; ing3 < 100; ing3++){
            if(patientNameArray[2].equals(deletedpatientNameArray[ing3])){
                tempAppointment[2] = tempAppointment[3];
                patientNameArray[2] = "";
                if(tempAppointment[3].equals(empty)){
                    tempAppointment[2] = "";
                }
                if(tempAppointment[4].equals(empty)) {
                     tempAppointment[3] = "";
                } 
            }
            
        }
        
        for(int ing4 = 0; ing4 < 100; ing4++){
            if(patientNameArray[3].equals(deletedpatientNameArray[ing4])){
                tempAppointment[3] = tempAppointment[4];
                patientNameArray[3] = "";
                if(tempAppointment[4].equals(empty)){
                    tempAppointment[3] = "";
                }
                if(tempAppointment[5].equals(empty)) {
                    tempAppointment[4] = "";
                }
                
            }
            
        }
        
        for(int ing5 = 0; ing5 < 100; ing5++){
            if(patientNameArray[4].equals(deletedpatientNameArray[ing5])){
                tempAppointment[4] = tempAppointment[5];
                patientNameArray[4] = "";
                tempAppointment[5] = "";
            }
        }
        
        for(int ing6 = 0; ing6 < 100; ing6++){
            if(patientNameArray[5].equals(deletedpatientNameArray[ing6])){
                tempAppointment[5] = "";
                patientNameArray[5] = "";
            }
        }
        
        showTask.setText(tempAppointment[0]);
        showTask1.setText(tempAppointment[1]);
        showTask2.setText(tempAppointment[2]);
        showTask3.setText(tempAppointment[3]);
        showTask4.setText(tempAppointment[4]);
        showTask5.setText(tempAppointment[5]);
        
        if(!tempAppointment[0].equals(empty)) {
            taskCheckbox.setVisible(true); 
        } else {
            taskCheckbox.setVisible(false); 
        }
        
        if(!tempAppointment[1].equals(empty)) {
            taskCheckbox1.setVisible(true);
        } else {
            taskCheckbox1.setVisible(false); 
        }
        
        if(!tempAppointment[2].equals(empty)) {
            taskCheckbox2.setVisible(true);
        } else {
            taskCheckbox2.setVisible(false); 
        }
        
        if(!tempAppointment[3].equals(empty)) {
            taskCheckbox3.setVisible(true);
        } else {
            taskCheckbox3.setVisible(false); 
        }
        
        if(!tempAppointment[4].equals(empty)) {
            taskCheckbox4.setVisible(true);
        } else {
            taskCheckbox4.setVisible(false); 
        }
        
        if(!tempAppointment[5].equals(empty)) {
            taskCheckbox5.setVisible(true);
        } else {
            taskCheckbox5.setVisible(false); 
        }

    }//GEN-LAST:event_jButton7ActionPerformed
    
    
    public void setToZero() {
          
            Timer setZero = new Timer(timerVariable, new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    actionSwitch = 0;
                }
            });
            setZero.setRepeats(false);
            setZero.setInitialDelay(timerVariable);
            setZero.start();
        }
    
     public void setToDelay() {
          
            Timer setZero = new Timer(2000, new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    actionSwitch = 7;
                }
            });
            
            setZero.setRepeats(false);
            setZero.setDelay(2000);
            setZero.setInitialDelay(2000);
            setZero.start();
        }
    
    //clock
    public void ClockPane() {
            clockPanel.setLayout(new BorderLayout());
            clock = new JLabel();
            clock.setHorizontalAlignment(JLabel.CENTER);
            clock.setFont(UIManager.getFont("Label.font").deriveFont(Font.BOLD, 30f));
            tickTock();
            clockPanel.add(clock);

            Timer timer = new Timer(500, new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    tickTock();
                }
            });
            timer.setRepeats(true);
            timer.setCoalesce(true);
            timer.setInitialDelay(0);
            timer.start();
        }

        public void tickTock() {
            clock.setText(new SimpleDateFormat("hh:mm:ss a").format(new Date()));
        }
    //clock
        
    //day
        public void DayPane() {
            dayPanel.setLayout(new BorderLayout());
            dayLabel = new JLabel();
            dayLabel.setHorizontalAlignment(JLabel.CENTER);
            dayLabel.setFont(UIManager.getFont("Label.font").deriveFont(Font.BOLD, 30f));
            displayDay();
            dayPanel.add(dayLabel);

            Timer timer = new Timer(500, new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    displayDay();
                }
            });
            timer.setRepeats(true);
            timer.setCoalesce(true);
            timer.setInitialDelay(0);
            timer.start();
        }

        public void displayDay() {
            dayLabel.setText(new SimpleDateFormat("d").format(new Date()));
        }
    //day  
        
         //date
        public void DatePane() {
            datePanel.setLayout(new BorderLayout());
            dateLabel = new JLabel();
            dateLabel.setHorizontalAlignment(JLabel.LEFT);
            dateLabel.setFont(UIManager.getFont("Label.font").deriveFont(Font.BOLD, 30f));
            displayDate();
            datePanel.add(dateLabel);

            Timer timer = new Timer(500, new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    displayDate();
                }
            });
            timer.setRepeats(true);
            timer.setCoalesce(true);
            timer.setInitialDelay(0);
            timer.start();
        }

        public void displayDate() {
            dateLabel.setText(new SimpleDateFormat("  EEE, MMM yyyy").format(new Date()));
        }
    //date
        
    //welcome+other actions
        public void actionsPane() {
            actionPanel.setLayout(new BorderLayout());
            actionsLabel = new JLabel();
            actionsLabel.setHorizontalAlignment(JLabel.CENTER);
            actionsLabel.setFont(UIManager.getFont("Label.font").deriveFont(Font.BOLD, 25f));
            displayActions();
            actionPanel.add(actionsLabel);

            Timer timer = new Timer(500, new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    displayActions();
                }
            });
            timer.setRepeats(true);
            timer.setCoalesce(true);
            timer.setInitialDelay(0);
            timer.start();
        }

        
        public void displayActions() {
            
            
            switch (actionSwitch) {
                case 1: actionsLabel.setText("Hello User!");
                    setToZero();
                    setToDelay();
                    break;
                case 2: actionsLabel.setText("Account Updated!"); 
                    setToZero();
                    setToDelay();
                    break;
                case 3: actionsLabel.setText(actionFirstName +" "+  actionLastName + " Added!"); 
                    setToZero();
                    setToDelay();
                    break;
                case 4: actionsLabel.setText(currentPatient.getFirstName() + " " + currentPatient.getLastName() +  " Modified!");  
                    setToZero();
                    setToDelay();
                    break;
                case 5: actionsLabel.setText("Appointment Added!");  
                    setToZero();
                    setToDelay();
                    break;
                case 6: actionsLabel.setText("Doctor Added!");  
                    setToZero();
                    setToDelay();
                    break;
                case 7: actionsLabel.setText("");
                    
                    break;
                default: actionsLabel.setText("");  
                    break;
                    
                
            }  
          
          
        }
    //welcome+other actions
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(pmsMissInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(pmsMissInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(pmsMissInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(pmsMissInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
              
                new pmsMissInterface().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel accountHoldersName;
    private javax.swing.JButton accountUpdateSubmit;
    private javax.swing.JButton accountUpdateSubmit1;
    private javax.swing.JPanel actionPanel;
    private javax.swing.JLabel actionsLabel;
    private javax.swing.JButton addAppointmentButton;
    private javax.swing.JPanel addAppointmentPanel;
    private javax.swing.JLabel addAppointtPopUp3;
    private javax.swing.JLabel addButtonPopUp;
    private javax.swing.JLabel addButtonPopUp1;
    private javax.swing.JButton addDoctorButton;
    private javax.swing.JTextField addDoctorField;
    private javax.swing.JButton addPatientCancelButton;
    private javax.swing.JButton addPatientCancelButton1;
    private javax.swing.JPanel addPatientPanel;
    private javax.swing.JLabel addPatientPopLabel;
    private javax.swing.JLabel addapointmentPopUp;
    private javax.swing.JTextField address;
    private javax.swing.JTextField address1;
    private javax.swing.JTextField amountInput;
    private java.awt.List appointmentDoctorList;
    private javax.swing.JLabel appointmentPatientName;
    private java.awt.List availableTimesList;
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JPanel calendarPanel;
    private javax.swing.JLabel calendarPopUp3;
    private javax.swing.JLabel cancelPopUp;
    private javax.swing.JLabel cancelPopUp1;
    private javax.swing.JLabel cancelPopUp2;
    private javax.swing.JLabel cancelPopUp3;
    private javax.swing.JLabel cancelPopUp4;
    private javax.swing.JLabel cancelPopUp5;
    private javax.swing.JLabel cancelPopUp7;
    private javax.swing.JButton checkInButton;
    private javax.swing.JButton checkInButton1;
    private javax.swing.JButton checkOutPatientButton;
    private javax.swing.JLabel checkOutPatientLabel;
    private javax.swing.JPanel check_inPanel;
    private javax.swing.JPanel check_outPanel;
    private javax.swing.JLabel checkoutPopUp2;
    private javax.swing.JPanel clockPanel;
    private javax.swing.JPanel configurePanel;
    private javax.swing.JTextField costTextField;
    private javax.swing.JLabel currentBalance;
    private javax.swing.JPanel currentTaskPanel;
    private datechooser.beans.DateChooserPanel dateChooserPanel1;
    private javax.swing.JLabel dateLabel;
    private javax.swing.JPanel datePanel;
    private javax.swing.JLabel dayLabel;
    private javax.swing.JPanel dayPanel;
    private javax.swing.JTextArea diagnosisTextField;
    private javax.swing.JPanel displayPanel;
    private java.awt.List doctorList;
    private javax.swing.JTextField eMailAddress;
    private javax.swing.JTextField eMailAddress1;
    private javax.swing.JTextField emergencyContact;
    private javax.swing.JTextField emergencyContact1;
    private javax.swing.JPanel extraRightPanel;
    private javax.swing.JCheckBox female;
    private javax.swing.JCheckBox female1;
    private javax.swing.JLabel findAppointmentContact;
    private javax.swing.JLabel findAppointmentDateTime;
    private javax.swing.JToggleButton findAppointmentDeleteButton;
    private javax.swing.JToggleButton findAppointmentModifyButton;
    private javax.swing.JLabel findAppointmentName;
    private javax.swing.JTextField findAppointmentNameField;
    private java.awt.List findAppointmentResultList;
    private javax.swing.JTextField firstName;
    private javax.swing.JTextField firstName1;
    private javax.swing.JButton historyDisplayButton;
    private javax.swing.JButton historyDoneButton;
    private javax.swing.JLabel historyPatientName;
    private java.awt.List historyVisitList;
    private java.awt.List inProgressList;
    private javax.swing.JTextField insuranceCoPay;
    private javax.swing.JTextField insuranceCoPay1;
    private javax.swing.JTextField insuranceName;
    private javax.swing.JTextField insuranceName1;
    private javax.swing.JTextField insurancePolicy;
    private javax.swing.JTextField insurancePolicy1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton19;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton20;
    private javax.swing.JButton jButton21;
    private javax.swing.JButton jButton22;
    private javax.swing.JButton jButton23;
    private javax.swing.JButton jButton24;
    private javax.swing.JButton jButton27;
    private javax.swing.JButton jButton28;
    private javax.swing.JButton jButton29;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton31;
    private javax.swing.JButton jButton32;
    private javax.swing.JButton jButton33;
    private javax.swing.JButton jButton34;
    private javax.swing.JButton jButton35;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTextField lastName;
    private javax.swing.JTextField lastName1;
    private javax.swing.JPanel logoPanel;
    private javax.swing.JPanel mainDisplay;
    private javax.swing.JLabel maindisplayPopLabel;
    private javax.swing.JLabel mainpopUp4;
    private javax.swing.JCheckBox male;
    private javax.swing.JCheckBox male1;
    private javax.swing.JCheckBox married;
    private javax.swing.JCheckBox married1;
    private javax.swing.JTextArea medicalBackground;
    private javax.swing.JTextArea medicalBackground1;
    private javax.swing.JButton modifyInfoButton;
    private javax.swing.JButton modifyPatientBack;
    private javax.swing.JButton modifyPatientCancel;
    private javax.swing.JButton modifyPatientCancel1;
    private javax.swing.JButton modifyPatientDone;
    private javax.swing.JPanel modifyPatientPanel;
    private javax.swing.JButton modifyPatientPanel2Button;
    private javax.swing.JLabel modifyPopUp7;
    private javax.swing.JPanel patientHistoryPanel;
    private javax.swing.JLabel printPopUp6;
    private javax.swing.JLabel printpathistoryPopUp;
    private javax.swing.JTextField reasonForVisitField;
    private javax.swing.JTextArea recommendationTextField;
    private javax.swing.JPanel reminderPanel;
    private javax.swing.JPanel reminderTab;
    private javax.swing.JButton removeDoctorButton;
    private javax.swing.JLabel removePopUp6;
    private javax.swing.JPanel searchAppointmentPanel;
    private javax.swing.JLabel searchAppointmentPopUpLabel;
    private javax.swing.JTextField searchField;
    private javax.swing.JPanel searchPatientPanel;
    private java.awt.List searchResults;
    private javax.swing.JLabel searchpateintPopUp1;
    private javax.swing.JLabel showHistoryPopUp;
    private javax.swing.JLabel showTask;
    private java.awt.Label showTask1;
    private java.awt.Label showTask2;
    private java.awt.Label showTask3;
    private java.awt.Label showTask4;
    private java.awt.Label showTask5;
    private javax.swing.JTextField socialSecurityNumber;
    private javax.swing.JTextField socialSecurityNumber1;
    private javax.swing.JCheckBox taskCheckbox;
    private javax.swing.JCheckBox taskCheckbox1;
    private javax.swing.JCheckBox taskCheckbox2;
    private javax.swing.JCheckBox taskCheckbox3;
    private javax.swing.JCheckBox taskCheckbox4;
    private javax.swing.JCheckBox taskCheckbox5;
    private javax.swing.JTextField telephoneNumber;
    private javax.swing.JTextField telephoneNumber1;
    private javax.swing.JPanel timeChartPanel;
    private java.awt.List todaysAppointmentList;
    private javax.swing.JLabel unknownPopUp;
    private javax.swing.JButton updateAccountButton;
    private javax.swing.JPanel updateAccountFrame;
    private javax.swing.JLabel verifyPopUp;
    private javax.swing.JLabel verifyPopUp1;
    private javax.swing.JLabel verifyPopUp2;
    private javax.swing.JLabel verifyPopUp3;
    private javax.swing.JLabel verifyPopUp4;
    private javax.swing.JLabel verifyPopUp5;
    private javax.swing.JLabel verifyPopUp6;
    private datechooser.beans.DateChooserPanel viewAppointmentCalendar;
    private datechooser.beans.DateChooserPanel viewAppointmentCalendar1;
    private javax.swing.JLabel viewAppointmentContact;
    private javax.swing.JLabel viewAppointmentContact1;
    private javax.swing.JLabel viewAppointmentDoctor;
    private javax.swing.JLabel viewAppointmentDoctor1;
    private javax.swing.JLabel viewAppointmentDoctor2;
    private java.awt.List viewAppointmentList;
    private java.awt.List viewAppointmentList1;
    private javax.swing.JLabel viewAppointmentName;
    private javax.swing.JLabel viewAppointmentName1;
    private javax.swing.JPanel viewAppointmentPanel;
    private javax.swing.JLabel viewAppointmentReason;
    private javax.swing.JLabel viewAppointmentReason1;
    private javax.swing.JLabel viewAppointmentReason2;
    private javax.swing.JToggleButton viewAppointmentsDelteButton;
    private javax.swing.JToggleButton viewAppointmentsModifyButton;
    private javax.swing.JButton walkInCancelButton;
    private javax.swing.JButton walkInCheckInButton;
    private java.awt.List walkInDoctorList;
    private javax.swing.JTextField walkInReasonForVisitTextField;
    private javax.swing.JLabel walkInUpdatePopUp;
    private javax.swing.JPanel walk_inPanel;
    // End of variables declaration//GEN-END:variables
}
